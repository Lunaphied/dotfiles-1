{- This file was auto-generated from protos/perfetto/common/sys_stats_counters.proto by the proto-lens-protoc program. -}
{-# LANGUAGE ScopedTypeVariables, DataKinds, TypeFamilies, UndecidableInstances, GeneralizedNewtypeDeriving, MultiParamTypeClasses, FlexibleContexts, FlexibleInstances, PatternSynonyms, MagicHash, NoImplicitPrelude, DataKinds, BangPatterns, TypeApplications, OverloadedStrings, DerivingStrategies#-}
{-# OPTIONS_GHC -Wno-unused-imports#-}
{-# OPTIONS_GHC -Wno-duplicate-exports#-}
{-# OPTIONS_GHC -Wno-dodgy-exports#-}
module Proto.Protos.Perfetto.Common.SysStatsCounters (
        MeminfoCounters(..), MeminfoCounters(), VmstatCounters(..),
        VmstatCounters()
    ) where
import qualified Data.ProtoLens.Runtime.Control.DeepSeq as Control.DeepSeq
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Prism as Data.ProtoLens.Prism
import qualified Data.ProtoLens.Runtime.Prelude as Prelude
import qualified Data.ProtoLens.Runtime.Data.Int as Data.Int
import qualified Data.ProtoLens.Runtime.Data.Monoid as Data.Monoid
import qualified Data.ProtoLens.Runtime.Data.Word as Data.Word
import qualified Data.ProtoLens.Runtime.Data.ProtoLens as Data.ProtoLens
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Bytes as Data.ProtoLens.Encoding.Bytes
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Growing as Data.ProtoLens.Encoding.Growing
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Parser.Unsafe as Data.ProtoLens.Encoding.Parser.Unsafe
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Wire as Data.ProtoLens.Encoding.Wire
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Field as Data.ProtoLens.Field
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Message.Enum as Data.ProtoLens.Message.Enum
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Service.Types as Data.ProtoLens.Service.Types
import qualified Data.ProtoLens.Runtime.Lens.Family2 as Lens.Family2
import qualified Data.ProtoLens.Runtime.Lens.Family2.Unchecked as Lens.Family2.Unchecked
import qualified Data.ProtoLens.Runtime.Data.Text as Data.Text
import qualified Data.ProtoLens.Runtime.Data.Map as Data.Map
import qualified Data.ProtoLens.Runtime.Data.ByteString as Data.ByteString
import qualified Data.ProtoLens.Runtime.Data.ByteString.Char8 as Data.ByteString.Char8
import qualified Data.ProtoLens.Runtime.Data.Text.Encoding as Data.Text.Encoding
import qualified Data.ProtoLens.Runtime.Data.Vector as Data.Vector
import qualified Data.ProtoLens.Runtime.Data.Vector.Generic as Data.Vector.Generic
import qualified Data.ProtoLens.Runtime.Data.Vector.Unboxed as Data.Vector.Unboxed
import qualified Data.ProtoLens.Runtime.Text.Read as Text.Read
data MeminfoCounters
  = MEMINFO_UNSPECIFIED |
    MEMINFO_MEM_TOTAL |
    MEMINFO_MEM_FREE |
    MEMINFO_MEM_AVAILABLE |
    MEMINFO_BUFFERS |
    MEMINFO_CACHED |
    MEMINFO_SWAP_CACHED |
    MEMINFO_ACTIVE |
    MEMINFO_INACTIVE |
    MEMINFO_ACTIVE_ANON |
    MEMINFO_INACTIVE_ANON |
    MEMINFO_ACTIVE_FILE |
    MEMINFO_INACTIVE_FILE |
    MEMINFO_UNEVICTABLE |
    MEMINFO_MLOCKED |
    MEMINFO_SWAP_TOTAL |
    MEMINFO_SWAP_FREE |
    MEMINFO_DIRTY |
    MEMINFO_WRITEBACK |
    MEMINFO_ANON_PAGES |
    MEMINFO_MAPPED |
    MEMINFO_SHMEM |
    MEMINFO_SLAB |
    MEMINFO_SLAB_RECLAIMABLE |
    MEMINFO_SLAB_UNRECLAIMABLE |
    MEMINFO_KERNEL_STACK |
    MEMINFO_PAGE_TABLES |
    MEMINFO_COMMIT_LIMIT |
    MEMINFO_COMMITED_AS |
    MEMINFO_VMALLOC_TOTAL |
    MEMINFO_VMALLOC_USED |
    MEMINFO_VMALLOC_CHUNK |
    MEMINFO_CMA_TOTAL |
    MEMINFO_CMA_FREE
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.MessageEnum MeminfoCounters where
  maybeToEnum 0 = Prelude.Just MEMINFO_UNSPECIFIED
  maybeToEnum 1 = Prelude.Just MEMINFO_MEM_TOTAL
  maybeToEnum 2 = Prelude.Just MEMINFO_MEM_FREE
  maybeToEnum 3 = Prelude.Just MEMINFO_MEM_AVAILABLE
  maybeToEnum 4 = Prelude.Just MEMINFO_BUFFERS
  maybeToEnum 5 = Prelude.Just MEMINFO_CACHED
  maybeToEnum 6 = Prelude.Just MEMINFO_SWAP_CACHED
  maybeToEnum 7 = Prelude.Just MEMINFO_ACTIVE
  maybeToEnum 8 = Prelude.Just MEMINFO_INACTIVE
  maybeToEnum 9 = Prelude.Just MEMINFO_ACTIVE_ANON
  maybeToEnum 10 = Prelude.Just MEMINFO_INACTIVE_ANON
  maybeToEnum 11 = Prelude.Just MEMINFO_ACTIVE_FILE
  maybeToEnum 12 = Prelude.Just MEMINFO_INACTIVE_FILE
  maybeToEnum 13 = Prelude.Just MEMINFO_UNEVICTABLE
  maybeToEnum 14 = Prelude.Just MEMINFO_MLOCKED
  maybeToEnum 15 = Prelude.Just MEMINFO_SWAP_TOTAL
  maybeToEnum 16 = Prelude.Just MEMINFO_SWAP_FREE
  maybeToEnum 17 = Prelude.Just MEMINFO_DIRTY
  maybeToEnum 18 = Prelude.Just MEMINFO_WRITEBACK
  maybeToEnum 19 = Prelude.Just MEMINFO_ANON_PAGES
  maybeToEnum 20 = Prelude.Just MEMINFO_MAPPED
  maybeToEnum 21 = Prelude.Just MEMINFO_SHMEM
  maybeToEnum 22 = Prelude.Just MEMINFO_SLAB
  maybeToEnum 23 = Prelude.Just MEMINFO_SLAB_RECLAIMABLE
  maybeToEnum 24 = Prelude.Just MEMINFO_SLAB_UNRECLAIMABLE
  maybeToEnum 25 = Prelude.Just MEMINFO_KERNEL_STACK
  maybeToEnum 26 = Prelude.Just MEMINFO_PAGE_TABLES
  maybeToEnum 27 = Prelude.Just MEMINFO_COMMIT_LIMIT
  maybeToEnum 28 = Prelude.Just MEMINFO_COMMITED_AS
  maybeToEnum 29 = Prelude.Just MEMINFO_VMALLOC_TOTAL
  maybeToEnum 30 = Prelude.Just MEMINFO_VMALLOC_USED
  maybeToEnum 31 = Prelude.Just MEMINFO_VMALLOC_CHUNK
  maybeToEnum 32 = Prelude.Just MEMINFO_CMA_TOTAL
  maybeToEnum 33 = Prelude.Just MEMINFO_CMA_FREE
  maybeToEnum _ = Prelude.Nothing
  showEnum MEMINFO_UNSPECIFIED = "MEMINFO_UNSPECIFIED"
  showEnum MEMINFO_MEM_TOTAL = "MEMINFO_MEM_TOTAL"
  showEnum MEMINFO_MEM_FREE = "MEMINFO_MEM_FREE"
  showEnum MEMINFO_MEM_AVAILABLE = "MEMINFO_MEM_AVAILABLE"
  showEnum MEMINFO_BUFFERS = "MEMINFO_BUFFERS"
  showEnum MEMINFO_CACHED = "MEMINFO_CACHED"
  showEnum MEMINFO_SWAP_CACHED = "MEMINFO_SWAP_CACHED"
  showEnum MEMINFO_ACTIVE = "MEMINFO_ACTIVE"
  showEnum MEMINFO_INACTIVE = "MEMINFO_INACTIVE"
  showEnum MEMINFO_ACTIVE_ANON = "MEMINFO_ACTIVE_ANON"
  showEnum MEMINFO_INACTIVE_ANON = "MEMINFO_INACTIVE_ANON"
  showEnum MEMINFO_ACTIVE_FILE = "MEMINFO_ACTIVE_FILE"
  showEnum MEMINFO_INACTIVE_FILE = "MEMINFO_INACTIVE_FILE"
  showEnum MEMINFO_UNEVICTABLE = "MEMINFO_UNEVICTABLE"
  showEnum MEMINFO_MLOCKED = "MEMINFO_MLOCKED"
  showEnum MEMINFO_SWAP_TOTAL = "MEMINFO_SWAP_TOTAL"
  showEnum MEMINFO_SWAP_FREE = "MEMINFO_SWAP_FREE"
  showEnum MEMINFO_DIRTY = "MEMINFO_DIRTY"
  showEnum MEMINFO_WRITEBACK = "MEMINFO_WRITEBACK"
  showEnum MEMINFO_ANON_PAGES = "MEMINFO_ANON_PAGES"
  showEnum MEMINFO_MAPPED = "MEMINFO_MAPPED"
  showEnum MEMINFO_SHMEM = "MEMINFO_SHMEM"
  showEnum MEMINFO_SLAB = "MEMINFO_SLAB"
  showEnum MEMINFO_SLAB_RECLAIMABLE = "MEMINFO_SLAB_RECLAIMABLE"
  showEnum MEMINFO_SLAB_UNRECLAIMABLE = "MEMINFO_SLAB_UNRECLAIMABLE"
  showEnum MEMINFO_KERNEL_STACK = "MEMINFO_KERNEL_STACK"
  showEnum MEMINFO_PAGE_TABLES = "MEMINFO_PAGE_TABLES"
  showEnum MEMINFO_COMMIT_LIMIT = "MEMINFO_COMMIT_LIMIT"
  showEnum MEMINFO_COMMITED_AS = "MEMINFO_COMMITED_AS"
  showEnum MEMINFO_VMALLOC_TOTAL = "MEMINFO_VMALLOC_TOTAL"
  showEnum MEMINFO_VMALLOC_USED = "MEMINFO_VMALLOC_USED"
  showEnum MEMINFO_VMALLOC_CHUNK = "MEMINFO_VMALLOC_CHUNK"
  showEnum MEMINFO_CMA_TOTAL = "MEMINFO_CMA_TOTAL"
  showEnum MEMINFO_CMA_FREE = "MEMINFO_CMA_FREE"
  readEnum k
    | (Prelude.==) k "MEMINFO_UNSPECIFIED"
    = Prelude.Just MEMINFO_UNSPECIFIED
    | (Prelude.==) k "MEMINFO_MEM_TOTAL"
    = Prelude.Just MEMINFO_MEM_TOTAL
    | (Prelude.==) k "MEMINFO_MEM_FREE" = Prelude.Just MEMINFO_MEM_FREE
    | (Prelude.==) k "MEMINFO_MEM_AVAILABLE"
    = Prelude.Just MEMINFO_MEM_AVAILABLE
    | (Prelude.==) k "MEMINFO_BUFFERS" = Prelude.Just MEMINFO_BUFFERS
    | (Prelude.==) k "MEMINFO_CACHED" = Prelude.Just MEMINFO_CACHED
    | (Prelude.==) k "MEMINFO_SWAP_CACHED"
    = Prelude.Just MEMINFO_SWAP_CACHED
    | (Prelude.==) k "MEMINFO_ACTIVE" = Prelude.Just MEMINFO_ACTIVE
    | (Prelude.==) k "MEMINFO_INACTIVE" = Prelude.Just MEMINFO_INACTIVE
    | (Prelude.==) k "MEMINFO_ACTIVE_ANON"
    = Prelude.Just MEMINFO_ACTIVE_ANON
    | (Prelude.==) k "MEMINFO_INACTIVE_ANON"
    = Prelude.Just MEMINFO_INACTIVE_ANON
    | (Prelude.==) k "MEMINFO_ACTIVE_FILE"
    = Prelude.Just MEMINFO_ACTIVE_FILE
    | (Prelude.==) k "MEMINFO_INACTIVE_FILE"
    = Prelude.Just MEMINFO_INACTIVE_FILE
    | (Prelude.==) k "MEMINFO_UNEVICTABLE"
    = Prelude.Just MEMINFO_UNEVICTABLE
    | (Prelude.==) k "MEMINFO_MLOCKED" = Prelude.Just MEMINFO_MLOCKED
    | (Prelude.==) k "MEMINFO_SWAP_TOTAL"
    = Prelude.Just MEMINFO_SWAP_TOTAL
    | (Prelude.==) k "MEMINFO_SWAP_FREE"
    = Prelude.Just MEMINFO_SWAP_FREE
    | (Prelude.==) k "MEMINFO_DIRTY" = Prelude.Just MEMINFO_DIRTY
    | (Prelude.==) k "MEMINFO_WRITEBACK"
    = Prelude.Just MEMINFO_WRITEBACK
    | (Prelude.==) k "MEMINFO_ANON_PAGES"
    = Prelude.Just MEMINFO_ANON_PAGES
    | (Prelude.==) k "MEMINFO_MAPPED" = Prelude.Just MEMINFO_MAPPED
    | (Prelude.==) k "MEMINFO_SHMEM" = Prelude.Just MEMINFO_SHMEM
    | (Prelude.==) k "MEMINFO_SLAB" = Prelude.Just MEMINFO_SLAB
    | (Prelude.==) k "MEMINFO_SLAB_RECLAIMABLE"
    = Prelude.Just MEMINFO_SLAB_RECLAIMABLE
    | (Prelude.==) k "MEMINFO_SLAB_UNRECLAIMABLE"
    = Prelude.Just MEMINFO_SLAB_UNRECLAIMABLE
    | (Prelude.==) k "MEMINFO_KERNEL_STACK"
    = Prelude.Just MEMINFO_KERNEL_STACK
    | (Prelude.==) k "MEMINFO_PAGE_TABLES"
    = Prelude.Just MEMINFO_PAGE_TABLES
    | (Prelude.==) k "MEMINFO_COMMIT_LIMIT"
    = Prelude.Just MEMINFO_COMMIT_LIMIT
    | (Prelude.==) k "MEMINFO_COMMITED_AS"
    = Prelude.Just MEMINFO_COMMITED_AS
    | (Prelude.==) k "MEMINFO_VMALLOC_TOTAL"
    = Prelude.Just MEMINFO_VMALLOC_TOTAL
    | (Prelude.==) k "MEMINFO_VMALLOC_USED"
    = Prelude.Just MEMINFO_VMALLOC_USED
    | (Prelude.==) k "MEMINFO_VMALLOC_CHUNK"
    = Prelude.Just MEMINFO_VMALLOC_CHUNK
    | (Prelude.==) k "MEMINFO_CMA_TOTAL"
    = Prelude.Just MEMINFO_CMA_TOTAL
    | (Prelude.==) k "MEMINFO_CMA_FREE" = Prelude.Just MEMINFO_CMA_FREE
    | Prelude.otherwise
    = (Prelude.>>=) (Text.Read.readMaybe k) Data.ProtoLens.maybeToEnum
instance Prelude.Bounded MeminfoCounters where
  minBound = MEMINFO_UNSPECIFIED
  maxBound = MEMINFO_CMA_FREE
instance Prelude.Enum MeminfoCounters where
  toEnum k__
    = Prelude.maybe
        (Prelude.error
           ((Prelude.++)
              "toEnum: unknown value for enum MeminfoCounters: "
              (Prelude.show k__)))
        Prelude.id (Data.ProtoLens.maybeToEnum k__)
  fromEnum MEMINFO_UNSPECIFIED = 0
  fromEnum MEMINFO_MEM_TOTAL = 1
  fromEnum MEMINFO_MEM_FREE = 2
  fromEnum MEMINFO_MEM_AVAILABLE = 3
  fromEnum MEMINFO_BUFFERS = 4
  fromEnum MEMINFO_CACHED = 5
  fromEnum MEMINFO_SWAP_CACHED = 6
  fromEnum MEMINFO_ACTIVE = 7
  fromEnum MEMINFO_INACTIVE = 8
  fromEnum MEMINFO_ACTIVE_ANON = 9
  fromEnum MEMINFO_INACTIVE_ANON = 10
  fromEnum MEMINFO_ACTIVE_FILE = 11
  fromEnum MEMINFO_INACTIVE_FILE = 12
  fromEnum MEMINFO_UNEVICTABLE = 13
  fromEnum MEMINFO_MLOCKED = 14
  fromEnum MEMINFO_SWAP_TOTAL = 15
  fromEnum MEMINFO_SWAP_FREE = 16
  fromEnum MEMINFO_DIRTY = 17
  fromEnum MEMINFO_WRITEBACK = 18
  fromEnum MEMINFO_ANON_PAGES = 19
  fromEnum MEMINFO_MAPPED = 20
  fromEnum MEMINFO_SHMEM = 21
  fromEnum MEMINFO_SLAB = 22
  fromEnum MEMINFO_SLAB_RECLAIMABLE = 23
  fromEnum MEMINFO_SLAB_UNRECLAIMABLE = 24
  fromEnum MEMINFO_KERNEL_STACK = 25
  fromEnum MEMINFO_PAGE_TABLES = 26
  fromEnum MEMINFO_COMMIT_LIMIT = 27
  fromEnum MEMINFO_COMMITED_AS = 28
  fromEnum MEMINFO_VMALLOC_TOTAL = 29
  fromEnum MEMINFO_VMALLOC_USED = 30
  fromEnum MEMINFO_VMALLOC_CHUNK = 31
  fromEnum MEMINFO_CMA_TOTAL = 32
  fromEnum MEMINFO_CMA_FREE = 33
  succ MEMINFO_CMA_FREE
    = Prelude.error
        "MeminfoCounters.succ: bad argument MEMINFO_CMA_FREE. This value would be out of bounds."
  succ MEMINFO_UNSPECIFIED = MEMINFO_MEM_TOTAL
  succ MEMINFO_MEM_TOTAL = MEMINFO_MEM_FREE
  succ MEMINFO_MEM_FREE = MEMINFO_MEM_AVAILABLE
  succ MEMINFO_MEM_AVAILABLE = MEMINFO_BUFFERS
  succ MEMINFO_BUFFERS = MEMINFO_CACHED
  succ MEMINFO_CACHED = MEMINFO_SWAP_CACHED
  succ MEMINFO_SWAP_CACHED = MEMINFO_ACTIVE
  succ MEMINFO_ACTIVE = MEMINFO_INACTIVE
  succ MEMINFO_INACTIVE = MEMINFO_ACTIVE_ANON
  succ MEMINFO_ACTIVE_ANON = MEMINFO_INACTIVE_ANON
  succ MEMINFO_INACTIVE_ANON = MEMINFO_ACTIVE_FILE
  succ MEMINFO_ACTIVE_FILE = MEMINFO_INACTIVE_FILE
  succ MEMINFO_INACTIVE_FILE = MEMINFO_UNEVICTABLE
  succ MEMINFO_UNEVICTABLE = MEMINFO_MLOCKED
  succ MEMINFO_MLOCKED = MEMINFO_SWAP_TOTAL
  succ MEMINFO_SWAP_TOTAL = MEMINFO_SWAP_FREE
  succ MEMINFO_SWAP_FREE = MEMINFO_DIRTY
  succ MEMINFO_DIRTY = MEMINFO_WRITEBACK
  succ MEMINFO_WRITEBACK = MEMINFO_ANON_PAGES
  succ MEMINFO_ANON_PAGES = MEMINFO_MAPPED
  succ MEMINFO_MAPPED = MEMINFO_SHMEM
  succ MEMINFO_SHMEM = MEMINFO_SLAB
  succ MEMINFO_SLAB = MEMINFO_SLAB_RECLAIMABLE
  succ MEMINFO_SLAB_RECLAIMABLE = MEMINFO_SLAB_UNRECLAIMABLE
  succ MEMINFO_SLAB_UNRECLAIMABLE = MEMINFO_KERNEL_STACK
  succ MEMINFO_KERNEL_STACK = MEMINFO_PAGE_TABLES
  succ MEMINFO_PAGE_TABLES = MEMINFO_COMMIT_LIMIT
  succ MEMINFO_COMMIT_LIMIT = MEMINFO_COMMITED_AS
  succ MEMINFO_COMMITED_AS = MEMINFO_VMALLOC_TOTAL
  succ MEMINFO_VMALLOC_TOTAL = MEMINFO_VMALLOC_USED
  succ MEMINFO_VMALLOC_USED = MEMINFO_VMALLOC_CHUNK
  succ MEMINFO_VMALLOC_CHUNK = MEMINFO_CMA_TOTAL
  succ MEMINFO_CMA_TOTAL = MEMINFO_CMA_FREE
  pred MEMINFO_UNSPECIFIED
    = Prelude.error
        "MeminfoCounters.pred: bad argument MEMINFO_UNSPECIFIED. This value would be out of bounds."
  pred MEMINFO_MEM_TOTAL = MEMINFO_UNSPECIFIED
  pred MEMINFO_MEM_FREE = MEMINFO_MEM_TOTAL
  pred MEMINFO_MEM_AVAILABLE = MEMINFO_MEM_FREE
  pred MEMINFO_BUFFERS = MEMINFO_MEM_AVAILABLE
  pred MEMINFO_CACHED = MEMINFO_BUFFERS
  pred MEMINFO_SWAP_CACHED = MEMINFO_CACHED
  pred MEMINFO_ACTIVE = MEMINFO_SWAP_CACHED
  pred MEMINFO_INACTIVE = MEMINFO_ACTIVE
  pred MEMINFO_ACTIVE_ANON = MEMINFO_INACTIVE
  pred MEMINFO_INACTIVE_ANON = MEMINFO_ACTIVE_ANON
  pred MEMINFO_ACTIVE_FILE = MEMINFO_INACTIVE_ANON
  pred MEMINFO_INACTIVE_FILE = MEMINFO_ACTIVE_FILE
  pred MEMINFO_UNEVICTABLE = MEMINFO_INACTIVE_FILE
  pred MEMINFO_MLOCKED = MEMINFO_UNEVICTABLE
  pred MEMINFO_SWAP_TOTAL = MEMINFO_MLOCKED
  pred MEMINFO_SWAP_FREE = MEMINFO_SWAP_TOTAL
  pred MEMINFO_DIRTY = MEMINFO_SWAP_FREE
  pred MEMINFO_WRITEBACK = MEMINFO_DIRTY
  pred MEMINFO_ANON_PAGES = MEMINFO_WRITEBACK
  pred MEMINFO_MAPPED = MEMINFO_ANON_PAGES
  pred MEMINFO_SHMEM = MEMINFO_MAPPED
  pred MEMINFO_SLAB = MEMINFO_SHMEM
  pred MEMINFO_SLAB_RECLAIMABLE = MEMINFO_SLAB
  pred MEMINFO_SLAB_UNRECLAIMABLE = MEMINFO_SLAB_RECLAIMABLE
  pred MEMINFO_KERNEL_STACK = MEMINFO_SLAB_UNRECLAIMABLE
  pred MEMINFO_PAGE_TABLES = MEMINFO_KERNEL_STACK
  pred MEMINFO_COMMIT_LIMIT = MEMINFO_PAGE_TABLES
  pred MEMINFO_COMMITED_AS = MEMINFO_COMMIT_LIMIT
  pred MEMINFO_VMALLOC_TOTAL = MEMINFO_COMMITED_AS
  pred MEMINFO_VMALLOC_USED = MEMINFO_VMALLOC_TOTAL
  pred MEMINFO_VMALLOC_CHUNK = MEMINFO_VMALLOC_USED
  pred MEMINFO_CMA_TOTAL = MEMINFO_VMALLOC_CHUNK
  pred MEMINFO_CMA_FREE = MEMINFO_CMA_TOTAL
  enumFrom = Data.ProtoLens.Message.Enum.messageEnumFrom
  enumFromTo = Data.ProtoLens.Message.Enum.messageEnumFromTo
  enumFromThen = Data.ProtoLens.Message.Enum.messageEnumFromThen
  enumFromThenTo = Data.ProtoLens.Message.Enum.messageEnumFromThenTo
instance Data.ProtoLens.FieldDefault MeminfoCounters where
  fieldDefault = MEMINFO_UNSPECIFIED
instance Control.DeepSeq.NFData MeminfoCounters where
  rnf x__ = Prelude.seq x__ ()
data VmstatCounters
  = VMSTAT_UNSPECIFIED |
    VMSTAT_NR_FREE_PAGES |
    VMSTAT_NR_ALLOC_BATCH |
    VMSTAT_NR_INACTIVE_ANON |
    VMSTAT_NR_ACTIVE_ANON |
    VMSTAT_NR_INACTIVE_FILE |
    VMSTAT_NR_ACTIVE_FILE |
    VMSTAT_NR_UNEVICTABLE |
    VMSTAT_NR_MLOCK |
    VMSTAT_NR_ANON_PAGES |
    VMSTAT_NR_MAPPED |
    VMSTAT_NR_FILE_PAGES |
    VMSTAT_NR_DIRTY |
    VMSTAT_NR_WRITEBACK |
    VMSTAT_NR_SLAB_RECLAIMABLE |
    VMSTAT_NR_SLAB_UNRECLAIMABLE |
    VMSTAT_NR_PAGE_TABLE_PAGES |
    VMSTAT_NR_KERNEL_STACK |
    VMSTAT_NR_OVERHEAD |
    VMSTAT_NR_UNSTABLE |
    VMSTAT_NR_BOUNCE |
    VMSTAT_NR_VMSCAN_WRITE |
    VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM |
    VMSTAT_NR_WRITEBACK_TEMP |
    VMSTAT_NR_ISOLATED_ANON |
    VMSTAT_NR_ISOLATED_FILE |
    VMSTAT_NR_SHMEM |
    VMSTAT_NR_DIRTIED |
    VMSTAT_NR_WRITTEN |
    VMSTAT_NR_PAGES_SCANNED |
    VMSTAT_WORKINGSET_REFAULT |
    VMSTAT_WORKINGSET_ACTIVATE |
    VMSTAT_WORKINGSET_NODERECLAIM |
    VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES |
    VMSTAT_NR_FREE_CMA |
    VMSTAT_NR_SWAPCACHE |
    VMSTAT_NR_DIRTY_THRESHOLD |
    VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD |
    VMSTAT_PGPGIN |
    VMSTAT_PGPGOUT |
    VMSTAT_PGPGOUTCLEAN |
    VMSTAT_PSWPIN |
    VMSTAT_PSWPOUT |
    VMSTAT_PGALLOC_DMA |
    VMSTAT_PGALLOC_NORMAL |
    VMSTAT_PGALLOC_MOVABLE |
    VMSTAT_PGFREE |
    VMSTAT_PGACTIVATE |
    VMSTAT_PGDEACTIVATE |
    VMSTAT_PGFAULT |
    VMSTAT_PGMAJFAULT |
    VMSTAT_PGREFILL_DMA |
    VMSTAT_PGREFILL_NORMAL |
    VMSTAT_PGREFILL_MOVABLE |
    VMSTAT_PGSTEAL_KSWAPD_DMA |
    VMSTAT_PGSTEAL_KSWAPD_NORMAL |
    VMSTAT_PGSTEAL_KSWAPD_MOVABLE |
    VMSTAT_PGSTEAL_DIRECT_DMA |
    VMSTAT_PGSTEAL_DIRECT_NORMAL |
    VMSTAT_PGSTEAL_DIRECT_MOVABLE |
    VMSTAT_PGSCAN_KSWAPD_DMA |
    VMSTAT_PGSCAN_KSWAPD_NORMAL |
    VMSTAT_PGSCAN_KSWAPD_MOVABLE |
    VMSTAT_PGSCAN_DIRECT_DMA |
    VMSTAT_PGSCAN_DIRECT_NORMAL |
    VMSTAT_PGSCAN_DIRECT_MOVABLE |
    VMSTAT_PGSCAN_DIRECT_THROTTLE |
    VMSTAT_PGINODESTEAL |
    VMSTAT_SLABS_SCANNED |
    VMSTAT_KSWAPD_INODESTEAL |
    VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY |
    VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY |
    VMSTAT_PAGEOUTRUN |
    VMSTAT_ALLOCSTALL |
    VMSTAT_PGROTATED |
    VMSTAT_DROP_PAGECACHE |
    VMSTAT_DROP_SLAB |
    VMSTAT_PGMIGRATE_SUCCESS |
    VMSTAT_PGMIGRATE_FAIL |
    VMSTAT_COMPACT_MIGRATE_SCANNED |
    VMSTAT_COMPACT_FREE_SCANNED |
    VMSTAT_COMPACT_ISOLATED |
    VMSTAT_COMPACT_STALL |
    VMSTAT_COMPACT_FAIL |
    VMSTAT_COMPACT_SUCCESS |
    VMSTAT_COMPACT_DAEMON_WAKE |
    VMSTAT_UNEVICTABLE_PGS_CULLED |
    VMSTAT_UNEVICTABLE_PGS_SCANNED |
    VMSTAT_UNEVICTABLE_PGS_RESCUED |
    VMSTAT_UNEVICTABLE_PGS_MLOCKED |
    VMSTAT_UNEVICTABLE_PGS_MUNLOCKED |
    VMSTAT_UNEVICTABLE_PGS_CLEARED |
    VMSTAT_UNEVICTABLE_PGS_STRANDED |
    VMSTAT_NR_ZSPAGES |
    VMSTAT_NR_ION_HEAP |
    VMSTAT_NR_GPU_HEAP |
    VMSTAT_ALLOCSTALL_DMA |
    VMSTAT_ALLOCSTALL_MOVABLE |
    VMSTAT_ALLOCSTALL_NORMAL |
    VMSTAT_COMPACT_DAEMON_FREE_SCANNED |
    VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED |
    VMSTAT_NR_FASTRPC |
    VMSTAT_NR_INDIRECTLY_RECLAIMABLE |
    VMSTAT_NR_ION_HEAP_POOL |
    VMSTAT_NR_KERNEL_MISC_RECLAIMABLE |
    VMSTAT_NR_SHADOW_CALL_STACK_BYTES |
    VMSTAT_NR_SHMEM_HUGEPAGES |
    VMSTAT_NR_SHMEM_PMDMAPPED |
    VMSTAT_NR_UNRECLAIMABLE_PAGES |
    VMSTAT_NR_ZONE_ACTIVE_ANON |
    VMSTAT_NR_ZONE_ACTIVE_FILE |
    VMSTAT_NR_ZONE_INACTIVE_ANON |
    VMSTAT_NR_ZONE_INACTIVE_FILE |
    VMSTAT_NR_ZONE_UNEVICTABLE |
    VMSTAT_NR_ZONE_WRITE_PENDING |
    VMSTAT_OOM_KILL |
    VMSTAT_PGLAZYFREE |
    VMSTAT_PGLAZYFREED |
    VMSTAT_PGREFILL |
    VMSTAT_PGSCAN_DIRECT |
    VMSTAT_PGSCAN_KSWAPD |
    VMSTAT_PGSKIP_DMA |
    VMSTAT_PGSKIP_MOVABLE |
    VMSTAT_PGSKIP_NORMAL |
    VMSTAT_PGSTEAL_DIRECT |
    VMSTAT_PGSTEAL_KSWAPD |
    VMSTAT_SWAP_RA |
    VMSTAT_SWAP_RA_HIT |
    VMSTAT_WORKINGSET_RESTORE
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.MessageEnum VmstatCounters where
  maybeToEnum 0 = Prelude.Just VMSTAT_UNSPECIFIED
  maybeToEnum 1 = Prelude.Just VMSTAT_NR_FREE_PAGES
  maybeToEnum 2 = Prelude.Just VMSTAT_NR_ALLOC_BATCH
  maybeToEnum 3 = Prelude.Just VMSTAT_NR_INACTIVE_ANON
  maybeToEnum 4 = Prelude.Just VMSTAT_NR_ACTIVE_ANON
  maybeToEnum 5 = Prelude.Just VMSTAT_NR_INACTIVE_FILE
  maybeToEnum 6 = Prelude.Just VMSTAT_NR_ACTIVE_FILE
  maybeToEnum 7 = Prelude.Just VMSTAT_NR_UNEVICTABLE
  maybeToEnum 8 = Prelude.Just VMSTAT_NR_MLOCK
  maybeToEnum 9 = Prelude.Just VMSTAT_NR_ANON_PAGES
  maybeToEnum 10 = Prelude.Just VMSTAT_NR_MAPPED
  maybeToEnum 11 = Prelude.Just VMSTAT_NR_FILE_PAGES
  maybeToEnum 12 = Prelude.Just VMSTAT_NR_DIRTY
  maybeToEnum 13 = Prelude.Just VMSTAT_NR_WRITEBACK
  maybeToEnum 14 = Prelude.Just VMSTAT_NR_SLAB_RECLAIMABLE
  maybeToEnum 15 = Prelude.Just VMSTAT_NR_SLAB_UNRECLAIMABLE
  maybeToEnum 16 = Prelude.Just VMSTAT_NR_PAGE_TABLE_PAGES
  maybeToEnum 17 = Prelude.Just VMSTAT_NR_KERNEL_STACK
  maybeToEnum 18 = Prelude.Just VMSTAT_NR_OVERHEAD
  maybeToEnum 19 = Prelude.Just VMSTAT_NR_UNSTABLE
  maybeToEnum 20 = Prelude.Just VMSTAT_NR_BOUNCE
  maybeToEnum 21 = Prelude.Just VMSTAT_NR_VMSCAN_WRITE
  maybeToEnum 22 = Prelude.Just VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM
  maybeToEnum 23 = Prelude.Just VMSTAT_NR_WRITEBACK_TEMP
  maybeToEnum 24 = Prelude.Just VMSTAT_NR_ISOLATED_ANON
  maybeToEnum 25 = Prelude.Just VMSTAT_NR_ISOLATED_FILE
  maybeToEnum 26 = Prelude.Just VMSTAT_NR_SHMEM
  maybeToEnum 27 = Prelude.Just VMSTAT_NR_DIRTIED
  maybeToEnum 28 = Prelude.Just VMSTAT_NR_WRITTEN
  maybeToEnum 29 = Prelude.Just VMSTAT_NR_PAGES_SCANNED
  maybeToEnum 30 = Prelude.Just VMSTAT_WORKINGSET_REFAULT
  maybeToEnum 31 = Prelude.Just VMSTAT_WORKINGSET_ACTIVATE
  maybeToEnum 32 = Prelude.Just VMSTAT_WORKINGSET_NODERECLAIM
  maybeToEnum 33 = Prelude.Just VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES
  maybeToEnum 34 = Prelude.Just VMSTAT_NR_FREE_CMA
  maybeToEnum 35 = Prelude.Just VMSTAT_NR_SWAPCACHE
  maybeToEnum 36 = Prelude.Just VMSTAT_NR_DIRTY_THRESHOLD
  maybeToEnum 37 = Prelude.Just VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD
  maybeToEnum 38 = Prelude.Just VMSTAT_PGPGIN
  maybeToEnum 39 = Prelude.Just VMSTAT_PGPGOUT
  maybeToEnum 40 = Prelude.Just VMSTAT_PGPGOUTCLEAN
  maybeToEnum 41 = Prelude.Just VMSTAT_PSWPIN
  maybeToEnum 42 = Prelude.Just VMSTAT_PSWPOUT
  maybeToEnum 43 = Prelude.Just VMSTAT_PGALLOC_DMA
  maybeToEnum 44 = Prelude.Just VMSTAT_PGALLOC_NORMAL
  maybeToEnum 45 = Prelude.Just VMSTAT_PGALLOC_MOVABLE
  maybeToEnum 46 = Prelude.Just VMSTAT_PGFREE
  maybeToEnum 47 = Prelude.Just VMSTAT_PGACTIVATE
  maybeToEnum 48 = Prelude.Just VMSTAT_PGDEACTIVATE
  maybeToEnum 49 = Prelude.Just VMSTAT_PGFAULT
  maybeToEnum 50 = Prelude.Just VMSTAT_PGMAJFAULT
  maybeToEnum 51 = Prelude.Just VMSTAT_PGREFILL_DMA
  maybeToEnum 52 = Prelude.Just VMSTAT_PGREFILL_NORMAL
  maybeToEnum 53 = Prelude.Just VMSTAT_PGREFILL_MOVABLE
  maybeToEnum 54 = Prelude.Just VMSTAT_PGSTEAL_KSWAPD_DMA
  maybeToEnum 55 = Prelude.Just VMSTAT_PGSTEAL_KSWAPD_NORMAL
  maybeToEnum 56 = Prelude.Just VMSTAT_PGSTEAL_KSWAPD_MOVABLE
  maybeToEnum 57 = Prelude.Just VMSTAT_PGSTEAL_DIRECT_DMA
  maybeToEnum 58 = Prelude.Just VMSTAT_PGSTEAL_DIRECT_NORMAL
  maybeToEnum 59 = Prelude.Just VMSTAT_PGSTEAL_DIRECT_MOVABLE
  maybeToEnum 60 = Prelude.Just VMSTAT_PGSCAN_KSWAPD_DMA
  maybeToEnum 61 = Prelude.Just VMSTAT_PGSCAN_KSWAPD_NORMAL
  maybeToEnum 62 = Prelude.Just VMSTAT_PGSCAN_KSWAPD_MOVABLE
  maybeToEnum 63 = Prelude.Just VMSTAT_PGSCAN_DIRECT_DMA
  maybeToEnum 64 = Prelude.Just VMSTAT_PGSCAN_DIRECT_NORMAL
  maybeToEnum 65 = Prelude.Just VMSTAT_PGSCAN_DIRECT_MOVABLE
  maybeToEnum 66 = Prelude.Just VMSTAT_PGSCAN_DIRECT_THROTTLE
  maybeToEnum 67 = Prelude.Just VMSTAT_PGINODESTEAL
  maybeToEnum 68 = Prelude.Just VMSTAT_SLABS_SCANNED
  maybeToEnum 69 = Prelude.Just VMSTAT_KSWAPD_INODESTEAL
  maybeToEnum 70 = Prelude.Just VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY
  maybeToEnum 71 = Prelude.Just VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY
  maybeToEnum 72 = Prelude.Just VMSTAT_PAGEOUTRUN
  maybeToEnum 73 = Prelude.Just VMSTAT_ALLOCSTALL
  maybeToEnum 74 = Prelude.Just VMSTAT_PGROTATED
  maybeToEnum 75 = Prelude.Just VMSTAT_DROP_PAGECACHE
  maybeToEnum 76 = Prelude.Just VMSTAT_DROP_SLAB
  maybeToEnum 77 = Prelude.Just VMSTAT_PGMIGRATE_SUCCESS
  maybeToEnum 78 = Prelude.Just VMSTAT_PGMIGRATE_FAIL
  maybeToEnum 79 = Prelude.Just VMSTAT_COMPACT_MIGRATE_SCANNED
  maybeToEnum 80 = Prelude.Just VMSTAT_COMPACT_FREE_SCANNED
  maybeToEnum 81 = Prelude.Just VMSTAT_COMPACT_ISOLATED
  maybeToEnum 82 = Prelude.Just VMSTAT_COMPACT_STALL
  maybeToEnum 83 = Prelude.Just VMSTAT_COMPACT_FAIL
  maybeToEnum 84 = Prelude.Just VMSTAT_COMPACT_SUCCESS
  maybeToEnum 85 = Prelude.Just VMSTAT_COMPACT_DAEMON_WAKE
  maybeToEnum 86 = Prelude.Just VMSTAT_UNEVICTABLE_PGS_CULLED
  maybeToEnum 87 = Prelude.Just VMSTAT_UNEVICTABLE_PGS_SCANNED
  maybeToEnum 88 = Prelude.Just VMSTAT_UNEVICTABLE_PGS_RESCUED
  maybeToEnum 89 = Prelude.Just VMSTAT_UNEVICTABLE_PGS_MLOCKED
  maybeToEnum 90 = Prelude.Just VMSTAT_UNEVICTABLE_PGS_MUNLOCKED
  maybeToEnum 91 = Prelude.Just VMSTAT_UNEVICTABLE_PGS_CLEARED
  maybeToEnum 92 = Prelude.Just VMSTAT_UNEVICTABLE_PGS_STRANDED
  maybeToEnum 93 = Prelude.Just VMSTAT_NR_ZSPAGES
  maybeToEnum 94 = Prelude.Just VMSTAT_NR_ION_HEAP
  maybeToEnum 95 = Prelude.Just VMSTAT_NR_GPU_HEAP
  maybeToEnum 96 = Prelude.Just VMSTAT_ALLOCSTALL_DMA
  maybeToEnum 97 = Prelude.Just VMSTAT_ALLOCSTALL_MOVABLE
  maybeToEnum 98 = Prelude.Just VMSTAT_ALLOCSTALL_NORMAL
  maybeToEnum 99 = Prelude.Just VMSTAT_COMPACT_DAEMON_FREE_SCANNED
  maybeToEnum 100
    = Prelude.Just VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED
  maybeToEnum 101 = Prelude.Just VMSTAT_NR_FASTRPC
  maybeToEnum 102 = Prelude.Just VMSTAT_NR_INDIRECTLY_RECLAIMABLE
  maybeToEnum 103 = Prelude.Just VMSTAT_NR_ION_HEAP_POOL
  maybeToEnum 104 = Prelude.Just VMSTAT_NR_KERNEL_MISC_RECLAIMABLE
  maybeToEnum 105 = Prelude.Just VMSTAT_NR_SHADOW_CALL_STACK_BYTES
  maybeToEnum 106 = Prelude.Just VMSTAT_NR_SHMEM_HUGEPAGES
  maybeToEnum 107 = Prelude.Just VMSTAT_NR_SHMEM_PMDMAPPED
  maybeToEnum 108 = Prelude.Just VMSTAT_NR_UNRECLAIMABLE_PAGES
  maybeToEnum 109 = Prelude.Just VMSTAT_NR_ZONE_ACTIVE_ANON
  maybeToEnum 110 = Prelude.Just VMSTAT_NR_ZONE_ACTIVE_FILE
  maybeToEnum 111 = Prelude.Just VMSTAT_NR_ZONE_INACTIVE_ANON
  maybeToEnum 112 = Prelude.Just VMSTAT_NR_ZONE_INACTIVE_FILE
  maybeToEnum 113 = Prelude.Just VMSTAT_NR_ZONE_UNEVICTABLE
  maybeToEnum 114 = Prelude.Just VMSTAT_NR_ZONE_WRITE_PENDING
  maybeToEnum 115 = Prelude.Just VMSTAT_OOM_KILL
  maybeToEnum 116 = Prelude.Just VMSTAT_PGLAZYFREE
  maybeToEnum 117 = Prelude.Just VMSTAT_PGLAZYFREED
  maybeToEnum 118 = Prelude.Just VMSTAT_PGREFILL
  maybeToEnum 119 = Prelude.Just VMSTAT_PGSCAN_DIRECT
  maybeToEnum 120 = Prelude.Just VMSTAT_PGSCAN_KSWAPD
  maybeToEnum 121 = Prelude.Just VMSTAT_PGSKIP_DMA
  maybeToEnum 122 = Prelude.Just VMSTAT_PGSKIP_MOVABLE
  maybeToEnum 123 = Prelude.Just VMSTAT_PGSKIP_NORMAL
  maybeToEnum 124 = Prelude.Just VMSTAT_PGSTEAL_DIRECT
  maybeToEnum 125 = Prelude.Just VMSTAT_PGSTEAL_KSWAPD
  maybeToEnum 126 = Prelude.Just VMSTAT_SWAP_RA
  maybeToEnum 127 = Prelude.Just VMSTAT_SWAP_RA_HIT
  maybeToEnum 128 = Prelude.Just VMSTAT_WORKINGSET_RESTORE
  maybeToEnum _ = Prelude.Nothing
  showEnum VMSTAT_UNSPECIFIED = "VMSTAT_UNSPECIFIED"
  showEnum VMSTAT_NR_FREE_PAGES = "VMSTAT_NR_FREE_PAGES"
  showEnum VMSTAT_NR_ALLOC_BATCH = "VMSTAT_NR_ALLOC_BATCH"
  showEnum VMSTAT_NR_INACTIVE_ANON = "VMSTAT_NR_INACTIVE_ANON"
  showEnum VMSTAT_NR_ACTIVE_ANON = "VMSTAT_NR_ACTIVE_ANON"
  showEnum VMSTAT_NR_INACTIVE_FILE = "VMSTAT_NR_INACTIVE_FILE"
  showEnum VMSTAT_NR_ACTIVE_FILE = "VMSTAT_NR_ACTIVE_FILE"
  showEnum VMSTAT_NR_UNEVICTABLE = "VMSTAT_NR_UNEVICTABLE"
  showEnum VMSTAT_NR_MLOCK = "VMSTAT_NR_MLOCK"
  showEnum VMSTAT_NR_ANON_PAGES = "VMSTAT_NR_ANON_PAGES"
  showEnum VMSTAT_NR_MAPPED = "VMSTAT_NR_MAPPED"
  showEnum VMSTAT_NR_FILE_PAGES = "VMSTAT_NR_FILE_PAGES"
  showEnum VMSTAT_NR_DIRTY = "VMSTAT_NR_DIRTY"
  showEnum VMSTAT_NR_WRITEBACK = "VMSTAT_NR_WRITEBACK"
  showEnum VMSTAT_NR_SLAB_RECLAIMABLE = "VMSTAT_NR_SLAB_RECLAIMABLE"
  showEnum VMSTAT_NR_SLAB_UNRECLAIMABLE
    = "VMSTAT_NR_SLAB_UNRECLAIMABLE"
  showEnum VMSTAT_NR_PAGE_TABLE_PAGES = "VMSTAT_NR_PAGE_TABLE_PAGES"
  showEnum VMSTAT_NR_KERNEL_STACK = "VMSTAT_NR_KERNEL_STACK"
  showEnum VMSTAT_NR_OVERHEAD = "VMSTAT_NR_OVERHEAD"
  showEnum VMSTAT_NR_UNSTABLE = "VMSTAT_NR_UNSTABLE"
  showEnum VMSTAT_NR_BOUNCE = "VMSTAT_NR_BOUNCE"
  showEnum VMSTAT_NR_VMSCAN_WRITE = "VMSTAT_NR_VMSCAN_WRITE"
  showEnum VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM
    = "VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM"
  showEnum VMSTAT_NR_WRITEBACK_TEMP = "VMSTAT_NR_WRITEBACK_TEMP"
  showEnum VMSTAT_NR_ISOLATED_ANON = "VMSTAT_NR_ISOLATED_ANON"
  showEnum VMSTAT_NR_ISOLATED_FILE = "VMSTAT_NR_ISOLATED_FILE"
  showEnum VMSTAT_NR_SHMEM = "VMSTAT_NR_SHMEM"
  showEnum VMSTAT_NR_DIRTIED = "VMSTAT_NR_DIRTIED"
  showEnum VMSTAT_NR_WRITTEN = "VMSTAT_NR_WRITTEN"
  showEnum VMSTAT_NR_PAGES_SCANNED = "VMSTAT_NR_PAGES_SCANNED"
  showEnum VMSTAT_WORKINGSET_REFAULT = "VMSTAT_WORKINGSET_REFAULT"
  showEnum VMSTAT_WORKINGSET_ACTIVATE = "VMSTAT_WORKINGSET_ACTIVATE"
  showEnum VMSTAT_WORKINGSET_NODERECLAIM
    = "VMSTAT_WORKINGSET_NODERECLAIM"
  showEnum VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES
    = "VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES"
  showEnum VMSTAT_NR_FREE_CMA = "VMSTAT_NR_FREE_CMA"
  showEnum VMSTAT_NR_SWAPCACHE = "VMSTAT_NR_SWAPCACHE"
  showEnum VMSTAT_NR_DIRTY_THRESHOLD = "VMSTAT_NR_DIRTY_THRESHOLD"
  showEnum VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD
    = "VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD"
  showEnum VMSTAT_PGPGIN = "VMSTAT_PGPGIN"
  showEnum VMSTAT_PGPGOUT = "VMSTAT_PGPGOUT"
  showEnum VMSTAT_PGPGOUTCLEAN = "VMSTAT_PGPGOUTCLEAN"
  showEnum VMSTAT_PSWPIN = "VMSTAT_PSWPIN"
  showEnum VMSTAT_PSWPOUT = "VMSTAT_PSWPOUT"
  showEnum VMSTAT_PGALLOC_DMA = "VMSTAT_PGALLOC_DMA"
  showEnum VMSTAT_PGALLOC_NORMAL = "VMSTAT_PGALLOC_NORMAL"
  showEnum VMSTAT_PGALLOC_MOVABLE = "VMSTAT_PGALLOC_MOVABLE"
  showEnum VMSTAT_PGFREE = "VMSTAT_PGFREE"
  showEnum VMSTAT_PGACTIVATE = "VMSTAT_PGACTIVATE"
  showEnum VMSTAT_PGDEACTIVATE = "VMSTAT_PGDEACTIVATE"
  showEnum VMSTAT_PGFAULT = "VMSTAT_PGFAULT"
  showEnum VMSTAT_PGMAJFAULT = "VMSTAT_PGMAJFAULT"
  showEnum VMSTAT_PGREFILL_DMA = "VMSTAT_PGREFILL_DMA"
  showEnum VMSTAT_PGREFILL_NORMAL = "VMSTAT_PGREFILL_NORMAL"
  showEnum VMSTAT_PGREFILL_MOVABLE = "VMSTAT_PGREFILL_MOVABLE"
  showEnum VMSTAT_PGSTEAL_KSWAPD_DMA = "VMSTAT_PGSTEAL_KSWAPD_DMA"
  showEnum VMSTAT_PGSTEAL_KSWAPD_NORMAL
    = "VMSTAT_PGSTEAL_KSWAPD_NORMAL"
  showEnum VMSTAT_PGSTEAL_KSWAPD_MOVABLE
    = "VMSTAT_PGSTEAL_KSWAPD_MOVABLE"
  showEnum VMSTAT_PGSTEAL_DIRECT_DMA = "VMSTAT_PGSTEAL_DIRECT_DMA"
  showEnum VMSTAT_PGSTEAL_DIRECT_NORMAL
    = "VMSTAT_PGSTEAL_DIRECT_NORMAL"
  showEnum VMSTAT_PGSTEAL_DIRECT_MOVABLE
    = "VMSTAT_PGSTEAL_DIRECT_MOVABLE"
  showEnum VMSTAT_PGSCAN_KSWAPD_DMA = "VMSTAT_PGSCAN_KSWAPD_DMA"
  showEnum VMSTAT_PGSCAN_KSWAPD_NORMAL
    = "VMSTAT_PGSCAN_KSWAPD_NORMAL"
  showEnum VMSTAT_PGSCAN_KSWAPD_MOVABLE
    = "VMSTAT_PGSCAN_KSWAPD_MOVABLE"
  showEnum VMSTAT_PGSCAN_DIRECT_DMA = "VMSTAT_PGSCAN_DIRECT_DMA"
  showEnum VMSTAT_PGSCAN_DIRECT_NORMAL
    = "VMSTAT_PGSCAN_DIRECT_NORMAL"
  showEnum VMSTAT_PGSCAN_DIRECT_MOVABLE
    = "VMSTAT_PGSCAN_DIRECT_MOVABLE"
  showEnum VMSTAT_PGSCAN_DIRECT_THROTTLE
    = "VMSTAT_PGSCAN_DIRECT_THROTTLE"
  showEnum VMSTAT_PGINODESTEAL = "VMSTAT_PGINODESTEAL"
  showEnum VMSTAT_SLABS_SCANNED = "VMSTAT_SLABS_SCANNED"
  showEnum VMSTAT_KSWAPD_INODESTEAL = "VMSTAT_KSWAPD_INODESTEAL"
  showEnum VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY
    = "VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY"
  showEnum VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY
    = "VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY"
  showEnum VMSTAT_PAGEOUTRUN = "VMSTAT_PAGEOUTRUN"
  showEnum VMSTAT_ALLOCSTALL = "VMSTAT_ALLOCSTALL"
  showEnum VMSTAT_PGROTATED = "VMSTAT_PGROTATED"
  showEnum VMSTAT_DROP_PAGECACHE = "VMSTAT_DROP_PAGECACHE"
  showEnum VMSTAT_DROP_SLAB = "VMSTAT_DROP_SLAB"
  showEnum VMSTAT_PGMIGRATE_SUCCESS = "VMSTAT_PGMIGRATE_SUCCESS"
  showEnum VMSTAT_PGMIGRATE_FAIL = "VMSTAT_PGMIGRATE_FAIL"
  showEnum VMSTAT_COMPACT_MIGRATE_SCANNED
    = "VMSTAT_COMPACT_MIGRATE_SCANNED"
  showEnum VMSTAT_COMPACT_FREE_SCANNED
    = "VMSTAT_COMPACT_FREE_SCANNED"
  showEnum VMSTAT_COMPACT_ISOLATED = "VMSTAT_COMPACT_ISOLATED"
  showEnum VMSTAT_COMPACT_STALL = "VMSTAT_COMPACT_STALL"
  showEnum VMSTAT_COMPACT_FAIL = "VMSTAT_COMPACT_FAIL"
  showEnum VMSTAT_COMPACT_SUCCESS = "VMSTAT_COMPACT_SUCCESS"
  showEnum VMSTAT_COMPACT_DAEMON_WAKE = "VMSTAT_COMPACT_DAEMON_WAKE"
  showEnum VMSTAT_UNEVICTABLE_PGS_CULLED
    = "VMSTAT_UNEVICTABLE_PGS_CULLED"
  showEnum VMSTAT_UNEVICTABLE_PGS_SCANNED
    = "VMSTAT_UNEVICTABLE_PGS_SCANNED"
  showEnum VMSTAT_UNEVICTABLE_PGS_RESCUED
    = "VMSTAT_UNEVICTABLE_PGS_RESCUED"
  showEnum VMSTAT_UNEVICTABLE_PGS_MLOCKED
    = "VMSTAT_UNEVICTABLE_PGS_MLOCKED"
  showEnum VMSTAT_UNEVICTABLE_PGS_MUNLOCKED
    = "VMSTAT_UNEVICTABLE_PGS_MUNLOCKED"
  showEnum VMSTAT_UNEVICTABLE_PGS_CLEARED
    = "VMSTAT_UNEVICTABLE_PGS_CLEARED"
  showEnum VMSTAT_UNEVICTABLE_PGS_STRANDED
    = "VMSTAT_UNEVICTABLE_PGS_STRANDED"
  showEnum VMSTAT_NR_ZSPAGES = "VMSTAT_NR_ZSPAGES"
  showEnum VMSTAT_NR_ION_HEAP = "VMSTAT_NR_ION_HEAP"
  showEnum VMSTAT_NR_GPU_HEAP = "VMSTAT_NR_GPU_HEAP"
  showEnum VMSTAT_ALLOCSTALL_DMA = "VMSTAT_ALLOCSTALL_DMA"
  showEnum VMSTAT_ALLOCSTALL_MOVABLE = "VMSTAT_ALLOCSTALL_MOVABLE"
  showEnum VMSTAT_ALLOCSTALL_NORMAL = "VMSTAT_ALLOCSTALL_NORMAL"
  showEnum VMSTAT_COMPACT_DAEMON_FREE_SCANNED
    = "VMSTAT_COMPACT_DAEMON_FREE_SCANNED"
  showEnum VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED
    = "VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED"
  showEnum VMSTAT_NR_FASTRPC = "VMSTAT_NR_FASTRPC"
  showEnum VMSTAT_NR_INDIRECTLY_RECLAIMABLE
    = "VMSTAT_NR_INDIRECTLY_RECLAIMABLE"
  showEnum VMSTAT_NR_ION_HEAP_POOL = "VMSTAT_NR_ION_HEAP_POOL"
  showEnum VMSTAT_NR_KERNEL_MISC_RECLAIMABLE
    = "VMSTAT_NR_KERNEL_MISC_RECLAIMABLE"
  showEnum VMSTAT_NR_SHADOW_CALL_STACK_BYTES
    = "VMSTAT_NR_SHADOW_CALL_STACK_BYTES"
  showEnum VMSTAT_NR_SHMEM_HUGEPAGES = "VMSTAT_NR_SHMEM_HUGEPAGES"
  showEnum VMSTAT_NR_SHMEM_PMDMAPPED = "VMSTAT_NR_SHMEM_PMDMAPPED"
  showEnum VMSTAT_NR_UNRECLAIMABLE_PAGES
    = "VMSTAT_NR_UNRECLAIMABLE_PAGES"
  showEnum VMSTAT_NR_ZONE_ACTIVE_ANON = "VMSTAT_NR_ZONE_ACTIVE_ANON"
  showEnum VMSTAT_NR_ZONE_ACTIVE_FILE = "VMSTAT_NR_ZONE_ACTIVE_FILE"
  showEnum VMSTAT_NR_ZONE_INACTIVE_ANON
    = "VMSTAT_NR_ZONE_INACTIVE_ANON"
  showEnum VMSTAT_NR_ZONE_INACTIVE_FILE
    = "VMSTAT_NR_ZONE_INACTIVE_FILE"
  showEnum VMSTAT_NR_ZONE_UNEVICTABLE = "VMSTAT_NR_ZONE_UNEVICTABLE"
  showEnum VMSTAT_NR_ZONE_WRITE_PENDING
    = "VMSTAT_NR_ZONE_WRITE_PENDING"
  showEnum VMSTAT_OOM_KILL = "VMSTAT_OOM_KILL"
  showEnum VMSTAT_PGLAZYFREE = "VMSTAT_PGLAZYFREE"
  showEnum VMSTAT_PGLAZYFREED = "VMSTAT_PGLAZYFREED"
  showEnum VMSTAT_PGREFILL = "VMSTAT_PGREFILL"
  showEnum VMSTAT_PGSCAN_DIRECT = "VMSTAT_PGSCAN_DIRECT"
  showEnum VMSTAT_PGSCAN_KSWAPD = "VMSTAT_PGSCAN_KSWAPD"
  showEnum VMSTAT_PGSKIP_DMA = "VMSTAT_PGSKIP_DMA"
  showEnum VMSTAT_PGSKIP_MOVABLE = "VMSTAT_PGSKIP_MOVABLE"
  showEnum VMSTAT_PGSKIP_NORMAL = "VMSTAT_PGSKIP_NORMAL"
  showEnum VMSTAT_PGSTEAL_DIRECT = "VMSTAT_PGSTEAL_DIRECT"
  showEnum VMSTAT_PGSTEAL_KSWAPD = "VMSTAT_PGSTEAL_KSWAPD"
  showEnum VMSTAT_SWAP_RA = "VMSTAT_SWAP_RA"
  showEnum VMSTAT_SWAP_RA_HIT = "VMSTAT_SWAP_RA_HIT"
  showEnum VMSTAT_WORKINGSET_RESTORE = "VMSTAT_WORKINGSET_RESTORE"
  readEnum k
    | (Prelude.==) k "VMSTAT_UNSPECIFIED"
    = Prelude.Just VMSTAT_UNSPECIFIED
    | (Prelude.==) k "VMSTAT_NR_FREE_PAGES"
    = Prelude.Just VMSTAT_NR_FREE_PAGES
    | (Prelude.==) k "VMSTAT_NR_ALLOC_BATCH"
    = Prelude.Just VMSTAT_NR_ALLOC_BATCH
    | (Prelude.==) k "VMSTAT_NR_INACTIVE_ANON"
    = Prelude.Just VMSTAT_NR_INACTIVE_ANON
    | (Prelude.==) k "VMSTAT_NR_ACTIVE_ANON"
    = Prelude.Just VMSTAT_NR_ACTIVE_ANON
    | (Prelude.==) k "VMSTAT_NR_INACTIVE_FILE"
    = Prelude.Just VMSTAT_NR_INACTIVE_FILE
    | (Prelude.==) k "VMSTAT_NR_ACTIVE_FILE"
    = Prelude.Just VMSTAT_NR_ACTIVE_FILE
    | (Prelude.==) k "VMSTAT_NR_UNEVICTABLE"
    = Prelude.Just VMSTAT_NR_UNEVICTABLE
    | (Prelude.==) k "VMSTAT_NR_MLOCK" = Prelude.Just VMSTAT_NR_MLOCK
    | (Prelude.==) k "VMSTAT_NR_ANON_PAGES"
    = Prelude.Just VMSTAT_NR_ANON_PAGES
    | (Prelude.==) k "VMSTAT_NR_MAPPED" = Prelude.Just VMSTAT_NR_MAPPED
    | (Prelude.==) k "VMSTAT_NR_FILE_PAGES"
    = Prelude.Just VMSTAT_NR_FILE_PAGES
    | (Prelude.==) k "VMSTAT_NR_DIRTY" = Prelude.Just VMSTAT_NR_DIRTY
    | (Prelude.==) k "VMSTAT_NR_WRITEBACK"
    = Prelude.Just VMSTAT_NR_WRITEBACK
    | (Prelude.==) k "VMSTAT_NR_SLAB_RECLAIMABLE"
    = Prelude.Just VMSTAT_NR_SLAB_RECLAIMABLE
    | (Prelude.==) k "VMSTAT_NR_SLAB_UNRECLAIMABLE"
    = Prelude.Just VMSTAT_NR_SLAB_UNRECLAIMABLE
    | (Prelude.==) k "VMSTAT_NR_PAGE_TABLE_PAGES"
    = Prelude.Just VMSTAT_NR_PAGE_TABLE_PAGES
    | (Prelude.==) k "VMSTAT_NR_KERNEL_STACK"
    = Prelude.Just VMSTAT_NR_KERNEL_STACK
    | (Prelude.==) k "VMSTAT_NR_OVERHEAD"
    = Prelude.Just VMSTAT_NR_OVERHEAD
    | (Prelude.==) k "VMSTAT_NR_UNSTABLE"
    = Prelude.Just VMSTAT_NR_UNSTABLE
    | (Prelude.==) k "VMSTAT_NR_BOUNCE" = Prelude.Just VMSTAT_NR_BOUNCE
    | (Prelude.==) k "VMSTAT_NR_VMSCAN_WRITE"
    = Prelude.Just VMSTAT_NR_VMSCAN_WRITE
    | (Prelude.==) k "VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM"
    = Prelude.Just VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM
    | (Prelude.==) k "VMSTAT_NR_WRITEBACK_TEMP"
    = Prelude.Just VMSTAT_NR_WRITEBACK_TEMP
    | (Prelude.==) k "VMSTAT_NR_ISOLATED_ANON"
    = Prelude.Just VMSTAT_NR_ISOLATED_ANON
    | (Prelude.==) k "VMSTAT_NR_ISOLATED_FILE"
    = Prelude.Just VMSTAT_NR_ISOLATED_FILE
    | (Prelude.==) k "VMSTAT_NR_SHMEM" = Prelude.Just VMSTAT_NR_SHMEM
    | (Prelude.==) k "VMSTAT_NR_DIRTIED"
    = Prelude.Just VMSTAT_NR_DIRTIED
    | (Prelude.==) k "VMSTAT_NR_WRITTEN"
    = Prelude.Just VMSTAT_NR_WRITTEN
    | (Prelude.==) k "VMSTAT_NR_PAGES_SCANNED"
    = Prelude.Just VMSTAT_NR_PAGES_SCANNED
    | (Prelude.==) k "VMSTAT_WORKINGSET_REFAULT"
    = Prelude.Just VMSTAT_WORKINGSET_REFAULT
    | (Prelude.==) k "VMSTAT_WORKINGSET_ACTIVATE"
    = Prelude.Just VMSTAT_WORKINGSET_ACTIVATE
    | (Prelude.==) k "VMSTAT_WORKINGSET_NODERECLAIM"
    = Prelude.Just VMSTAT_WORKINGSET_NODERECLAIM
    | (Prelude.==) k "VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES"
    = Prelude.Just VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES
    | (Prelude.==) k "VMSTAT_NR_FREE_CMA"
    = Prelude.Just VMSTAT_NR_FREE_CMA
    | (Prelude.==) k "VMSTAT_NR_SWAPCACHE"
    = Prelude.Just VMSTAT_NR_SWAPCACHE
    | (Prelude.==) k "VMSTAT_NR_DIRTY_THRESHOLD"
    = Prelude.Just VMSTAT_NR_DIRTY_THRESHOLD
    | (Prelude.==) k "VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD"
    = Prelude.Just VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD
    | (Prelude.==) k "VMSTAT_PGPGIN" = Prelude.Just VMSTAT_PGPGIN
    | (Prelude.==) k "VMSTAT_PGPGOUT" = Prelude.Just VMSTAT_PGPGOUT
    | (Prelude.==) k "VMSTAT_PGPGOUTCLEAN"
    = Prelude.Just VMSTAT_PGPGOUTCLEAN
    | (Prelude.==) k "VMSTAT_PSWPIN" = Prelude.Just VMSTAT_PSWPIN
    | (Prelude.==) k "VMSTAT_PSWPOUT" = Prelude.Just VMSTAT_PSWPOUT
    | (Prelude.==) k "VMSTAT_PGALLOC_DMA"
    = Prelude.Just VMSTAT_PGALLOC_DMA
    | (Prelude.==) k "VMSTAT_PGALLOC_NORMAL"
    = Prelude.Just VMSTAT_PGALLOC_NORMAL
    | (Prelude.==) k "VMSTAT_PGALLOC_MOVABLE"
    = Prelude.Just VMSTAT_PGALLOC_MOVABLE
    | (Prelude.==) k "VMSTAT_PGFREE" = Prelude.Just VMSTAT_PGFREE
    | (Prelude.==) k "VMSTAT_PGACTIVATE"
    = Prelude.Just VMSTAT_PGACTIVATE
    | (Prelude.==) k "VMSTAT_PGDEACTIVATE"
    = Prelude.Just VMSTAT_PGDEACTIVATE
    | (Prelude.==) k "VMSTAT_PGFAULT" = Prelude.Just VMSTAT_PGFAULT
    | (Prelude.==) k "VMSTAT_PGMAJFAULT"
    = Prelude.Just VMSTAT_PGMAJFAULT
    | (Prelude.==) k "VMSTAT_PGREFILL_DMA"
    = Prelude.Just VMSTAT_PGREFILL_DMA
    | (Prelude.==) k "VMSTAT_PGREFILL_NORMAL"
    = Prelude.Just VMSTAT_PGREFILL_NORMAL
    | (Prelude.==) k "VMSTAT_PGREFILL_MOVABLE"
    = Prelude.Just VMSTAT_PGREFILL_MOVABLE
    | (Prelude.==) k "VMSTAT_PGSTEAL_KSWAPD_DMA"
    = Prelude.Just VMSTAT_PGSTEAL_KSWAPD_DMA
    | (Prelude.==) k "VMSTAT_PGSTEAL_KSWAPD_NORMAL"
    = Prelude.Just VMSTAT_PGSTEAL_KSWAPD_NORMAL
    | (Prelude.==) k "VMSTAT_PGSTEAL_KSWAPD_MOVABLE"
    = Prelude.Just VMSTAT_PGSTEAL_KSWAPD_MOVABLE
    | (Prelude.==) k "VMSTAT_PGSTEAL_DIRECT_DMA"
    = Prelude.Just VMSTAT_PGSTEAL_DIRECT_DMA
    | (Prelude.==) k "VMSTAT_PGSTEAL_DIRECT_NORMAL"
    = Prelude.Just VMSTAT_PGSTEAL_DIRECT_NORMAL
    | (Prelude.==) k "VMSTAT_PGSTEAL_DIRECT_MOVABLE"
    = Prelude.Just VMSTAT_PGSTEAL_DIRECT_MOVABLE
    | (Prelude.==) k "VMSTAT_PGSCAN_KSWAPD_DMA"
    = Prelude.Just VMSTAT_PGSCAN_KSWAPD_DMA
    | (Prelude.==) k "VMSTAT_PGSCAN_KSWAPD_NORMAL"
    = Prelude.Just VMSTAT_PGSCAN_KSWAPD_NORMAL
    | (Prelude.==) k "VMSTAT_PGSCAN_KSWAPD_MOVABLE"
    = Prelude.Just VMSTAT_PGSCAN_KSWAPD_MOVABLE
    | (Prelude.==) k "VMSTAT_PGSCAN_DIRECT_DMA"
    = Prelude.Just VMSTAT_PGSCAN_DIRECT_DMA
    | (Prelude.==) k "VMSTAT_PGSCAN_DIRECT_NORMAL"
    = Prelude.Just VMSTAT_PGSCAN_DIRECT_NORMAL
    | (Prelude.==) k "VMSTAT_PGSCAN_DIRECT_MOVABLE"
    = Prelude.Just VMSTAT_PGSCAN_DIRECT_MOVABLE
    | (Prelude.==) k "VMSTAT_PGSCAN_DIRECT_THROTTLE"
    = Prelude.Just VMSTAT_PGSCAN_DIRECT_THROTTLE
    | (Prelude.==) k "VMSTAT_PGINODESTEAL"
    = Prelude.Just VMSTAT_PGINODESTEAL
    | (Prelude.==) k "VMSTAT_SLABS_SCANNED"
    = Prelude.Just VMSTAT_SLABS_SCANNED
    | (Prelude.==) k "VMSTAT_KSWAPD_INODESTEAL"
    = Prelude.Just VMSTAT_KSWAPD_INODESTEAL
    | (Prelude.==) k "VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY"
    = Prelude.Just VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY
    | (Prelude.==) k "VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY"
    = Prelude.Just VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY
    | (Prelude.==) k "VMSTAT_PAGEOUTRUN"
    = Prelude.Just VMSTAT_PAGEOUTRUN
    | (Prelude.==) k "VMSTAT_ALLOCSTALL"
    = Prelude.Just VMSTAT_ALLOCSTALL
    | (Prelude.==) k "VMSTAT_PGROTATED" = Prelude.Just VMSTAT_PGROTATED
    | (Prelude.==) k "VMSTAT_DROP_PAGECACHE"
    = Prelude.Just VMSTAT_DROP_PAGECACHE
    | (Prelude.==) k "VMSTAT_DROP_SLAB" = Prelude.Just VMSTAT_DROP_SLAB
    | (Prelude.==) k "VMSTAT_PGMIGRATE_SUCCESS"
    = Prelude.Just VMSTAT_PGMIGRATE_SUCCESS
    | (Prelude.==) k "VMSTAT_PGMIGRATE_FAIL"
    = Prelude.Just VMSTAT_PGMIGRATE_FAIL
    | (Prelude.==) k "VMSTAT_COMPACT_MIGRATE_SCANNED"
    = Prelude.Just VMSTAT_COMPACT_MIGRATE_SCANNED
    | (Prelude.==) k "VMSTAT_COMPACT_FREE_SCANNED"
    = Prelude.Just VMSTAT_COMPACT_FREE_SCANNED
    | (Prelude.==) k "VMSTAT_COMPACT_ISOLATED"
    = Prelude.Just VMSTAT_COMPACT_ISOLATED
    | (Prelude.==) k "VMSTAT_COMPACT_STALL"
    = Prelude.Just VMSTAT_COMPACT_STALL
    | (Prelude.==) k "VMSTAT_COMPACT_FAIL"
    = Prelude.Just VMSTAT_COMPACT_FAIL
    | (Prelude.==) k "VMSTAT_COMPACT_SUCCESS"
    = Prelude.Just VMSTAT_COMPACT_SUCCESS
    | (Prelude.==) k "VMSTAT_COMPACT_DAEMON_WAKE"
    = Prelude.Just VMSTAT_COMPACT_DAEMON_WAKE
    | (Prelude.==) k "VMSTAT_UNEVICTABLE_PGS_CULLED"
    = Prelude.Just VMSTAT_UNEVICTABLE_PGS_CULLED
    | (Prelude.==) k "VMSTAT_UNEVICTABLE_PGS_SCANNED"
    = Prelude.Just VMSTAT_UNEVICTABLE_PGS_SCANNED
    | (Prelude.==) k "VMSTAT_UNEVICTABLE_PGS_RESCUED"
    = Prelude.Just VMSTAT_UNEVICTABLE_PGS_RESCUED
    | (Prelude.==) k "VMSTAT_UNEVICTABLE_PGS_MLOCKED"
    = Prelude.Just VMSTAT_UNEVICTABLE_PGS_MLOCKED
    | (Prelude.==) k "VMSTAT_UNEVICTABLE_PGS_MUNLOCKED"
    = Prelude.Just VMSTAT_UNEVICTABLE_PGS_MUNLOCKED
    | (Prelude.==) k "VMSTAT_UNEVICTABLE_PGS_CLEARED"
    = Prelude.Just VMSTAT_UNEVICTABLE_PGS_CLEARED
    | (Prelude.==) k "VMSTAT_UNEVICTABLE_PGS_STRANDED"
    = Prelude.Just VMSTAT_UNEVICTABLE_PGS_STRANDED
    | (Prelude.==) k "VMSTAT_NR_ZSPAGES"
    = Prelude.Just VMSTAT_NR_ZSPAGES
    | (Prelude.==) k "VMSTAT_NR_ION_HEAP"
    = Prelude.Just VMSTAT_NR_ION_HEAP
    | (Prelude.==) k "VMSTAT_NR_GPU_HEAP"
    = Prelude.Just VMSTAT_NR_GPU_HEAP
    | (Prelude.==) k "VMSTAT_ALLOCSTALL_DMA"
    = Prelude.Just VMSTAT_ALLOCSTALL_DMA
    | (Prelude.==) k "VMSTAT_ALLOCSTALL_MOVABLE"
    = Prelude.Just VMSTAT_ALLOCSTALL_MOVABLE
    | (Prelude.==) k "VMSTAT_ALLOCSTALL_NORMAL"
    = Prelude.Just VMSTAT_ALLOCSTALL_NORMAL
    | (Prelude.==) k "VMSTAT_COMPACT_DAEMON_FREE_SCANNED"
    = Prelude.Just VMSTAT_COMPACT_DAEMON_FREE_SCANNED
    | (Prelude.==) k "VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED"
    = Prelude.Just VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED
    | (Prelude.==) k "VMSTAT_NR_FASTRPC"
    = Prelude.Just VMSTAT_NR_FASTRPC
    | (Prelude.==) k "VMSTAT_NR_INDIRECTLY_RECLAIMABLE"
    = Prelude.Just VMSTAT_NR_INDIRECTLY_RECLAIMABLE
    | (Prelude.==) k "VMSTAT_NR_ION_HEAP_POOL"
    = Prelude.Just VMSTAT_NR_ION_HEAP_POOL
    | (Prelude.==) k "VMSTAT_NR_KERNEL_MISC_RECLAIMABLE"
    = Prelude.Just VMSTAT_NR_KERNEL_MISC_RECLAIMABLE
    | (Prelude.==) k "VMSTAT_NR_SHADOW_CALL_STACK_BYTES"
    = Prelude.Just VMSTAT_NR_SHADOW_CALL_STACK_BYTES
    | (Prelude.==) k "VMSTAT_NR_SHMEM_HUGEPAGES"
    = Prelude.Just VMSTAT_NR_SHMEM_HUGEPAGES
    | (Prelude.==) k "VMSTAT_NR_SHMEM_PMDMAPPED"
    = Prelude.Just VMSTAT_NR_SHMEM_PMDMAPPED
    | (Prelude.==) k "VMSTAT_NR_UNRECLAIMABLE_PAGES"
    = Prelude.Just VMSTAT_NR_UNRECLAIMABLE_PAGES
    | (Prelude.==) k "VMSTAT_NR_ZONE_ACTIVE_ANON"
    = Prelude.Just VMSTAT_NR_ZONE_ACTIVE_ANON
    | (Prelude.==) k "VMSTAT_NR_ZONE_ACTIVE_FILE"
    = Prelude.Just VMSTAT_NR_ZONE_ACTIVE_FILE
    | (Prelude.==) k "VMSTAT_NR_ZONE_INACTIVE_ANON"
    = Prelude.Just VMSTAT_NR_ZONE_INACTIVE_ANON
    | (Prelude.==) k "VMSTAT_NR_ZONE_INACTIVE_FILE"
    = Prelude.Just VMSTAT_NR_ZONE_INACTIVE_FILE
    | (Prelude.==) k "VMSTAT_NR_ZONE_UNEVICTABLE"
    = Prelude.Just VMSTAT_NR_ZONE_UNEVICTABLE
    | (Prelude.==) k "VMSTAT_NR_ZONE_WRITE_PENDING"
    = Prelude.Just VMSTAT_NR_ZONE_WRITE_PENDING
    | (Prelude.==) k "VMSTAT_OOM_KILL" = Prelude.Just VMSTAT_OOM_KILL
    | (Prelude.==) k "VMSTAT_PGLAZYFREE"
    = Prelude.Just VMSTAT_PGLAZYFREE
    | (Prelude.==) k "VMSTAT_PGLAZYFREED"
    = Prelude.Just VMSTAT_PGLAZYFREED
    | (Prelude.==) k "VMSTAT_PGREFILL" = Prelude.Just VMSTAT_PGREFILL
    | (Prelude.==) k "VMSTAT_PGSCAN_DIRECT"
    = Prelude.Just VMSTAT_PGSCAN_DIRECT
    | (Prelude.==) k "VMSTAT_PGSCAN_KSWAPD"
    = Prelude.Just VMSTAT_PGSCAN_KSWAPD
    | (Prelude.==) k "VMSTAT_PGSKIP_DMA"
    = Prelude.Just VMSTAT_PGSKIP_DMA
    | (Prelude.==) k "VMSTAT_PGSKIP_MOVABLE"
    = Prelude.Just VMSTAT_PGSKIP_MOVABLE
    | (Prelude.==) k "VMSTAT_PGSKIP_NORMAL"
    = Prelude.Just VMSTAT_PGSKIP_NORMAL
    | (Prelude.==) k "VMSTAT_PGSTEAL_DIRECT"
    = Prelude.Just VMSTAT_PGSTEAL_DIRECT
    | (Prelude.==) k "VMSTAT_PGSTEAL_KSWAPD"
    = Prelude.Just VMSTAT_PGSTEAL_KSWAPD
    | (Prelude.==) k "VMSTAT_SWAP_RA" = Prelude.Just VMSTAT_SWAP_RA
    | (Prelude.==) k "VMSTAT_SWAP_RA_HIT"
    = Prelude.Just VMSTAT_SWAP_RA_HIT
    | (Prelude.==) k "VMSTAT_WORKINGSET_RESTORE"
    = Prelude.Just VMSTAT_WORKINGSET_RESTORE
    | Prelude.otherwise
    = (Prelude.>>=) (Text.Read.readMaybe k) Data.ProtoLens.maybeToEnum
instance Prelude.Bounded VmstatCounters where
  minBound = VMSTAT_UNSPECIFIED
  maxBound = VMSTAT_WORKINGSET_RESTORE
instance Prelude.Enum VmstatCounters where
  toEnum k__
    = Prelude.maybe
        (Prelude.error
           ((Prelude.++)
              "toEnum: unknown value for enum VmstatCounters: "
              (Prelude.show k__)))
        Prelude.id (Data.ProtoLens.maybeToEnum k__)
  fromEnum VMSTAT_UNSPECIFIED = 0
  fromEnum VMSTAT_NR_FREE_PAGES = 1
  fromEnum VMSTAT_NR_ALLOC_BATCH = 2
  fromEnum VMSTAT_NR_INACTIVE_ANON = 3
  fromEnum VMSTAT_NR_ACTIVE_ANON = 4
  fromEnum VMSTAT_NR_INACTIVE_FILE = 5
  fromEnum VMSTAT_NR_ACTIVE_FILE = 6
  fromEnum VMSTAT_NR_UNEVICTABLE = 7
  fromEnum VMSTAT_NR_MLOCK = 8
  fromEnum VMSTAT_NR_ANON_PAGES = 9
  fromEnum VMSTAT_NR_MAPPED = 10
  fromEnum VMSTAT_NR_FILE_PAGES = 11
  fromEnum VMSTAT_NR_DIRTY = 12
  fromEnum VMSTAT_NR_WRITEBACK = 13
  fromEnum VMSTAT_NR_SLAB_RECLAIMABLE = 14
  fromEnum VMSTAT_NR_SLAB_UNRECLAIMABLE = 15
  fromEnum VMSTAT_NR_PAGE_TABLE_PAGES = 16
  fromEnum VMSTAT_NR_KERNEL_STACK = 17
  fromEnum VMSTAT_NR_OVERHEAD = 18
  fromEnum VMSTAT_NR_UNSTABLE = 19
  fromEnum VMSTAT_NR_BOUNCE = 20
  fromEnum VMSTAT_NR_VMSCAN_WRITE = 21
  fromEnum VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM = 22
  fromEnum VMSTAT_NR_WRITEBACK_TEMP = 23
  fromEnum VMSTAT_NR_ISOLATED_ANON = 24
  fromEnum VMSTAT_NR_ISOLATED_FILE = 25
  fromEnum VMSTAT_NR_SHMEM = 26
  fromEnum VMSTAT_NR_DIRTIED = 27
  fromEnum VMSTAT_NR_WRITTEN = 28
  fromEnum VMSTAT_NR_PAGES_SCANNED = 29
  fromEnum VMSTAT_WORKINGSET_REFAULT = 30
  fromEnum VMSTAT_WORKINGSET_ACTIVATE = 31
  fromEnum VMSTAT_WORKINGSET_NODERECLAIM = 32
  fromEnum VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES = 33
  fromEnum VMSTAT_NR_FREE_CMA = 34
  fromEnum VMSTAT_NR_SWAPCACHE = 35
  fromEnum VMSTAT_NR_DIRTY_THRESHOLD = 36
  fromEnum VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD = 37
  fromEnum VMSTAT_PGPGIN = 38
  fromEnum VMSTAT_PGPGOUT = 39
  fromEnum VMSTAT_PGPGOUTCLEAN = 40
  fromEnum VMSTAT_PSWPIN = 41
  fromEnum VMSTAT_PSWPOUT = 42
  fromEnum VMSTAT_PGALLOC_DMA = 43
  fromEnum VMSTAT_PGALLOC_NORMAL = 44
  fromEnum VMSTAT_PGALLOC_MOVABLE = 45
  fromEnum VMSTAT_PGFREE = 46
  fromEnum VMSTAT_PGACTIVATE = 47
  fromEnum VMSTAT_PGDEACTIVATE = 48
  fromEnum VMSTAT_PGFAULT = 49
  fromEnum VMSTAT_PGMAJFAULT = 50
  fromEnum VMSTAT_PGREFILL_DMA = 51
  fromEnum VMSTAT_PGREFILL_NORMAL = 52
  fromEnum VMSTAT_PGREFILL_MOVABLE = 53
  fromEnum VMSTAT_PGSTEAL_KSWAPD_DMA = 54
  fromEnum VMSTAT_PGSTEAL_KSWAPD_NORMAL = 55
  fromEnum VMSTAT_PGSTEAL_KSWAPD_MOVABLE = 56
  fromEnum VMSTAT_PGSTEAL_DIRECT_DMA = 57
  fromEnum VMSTAT_PGSTEAL_DIRECT_NORMAL = 58
  fromEnum VMSTAT_PGSTEAL_DIRECT_MOVABLE = 59
  fromEnum VMSTAT_PGSCAN_KSWAPD_DMA = 60
  fromEnum VMSTAT_PGSCAN_KSWAPD_NORMAL = 61
  fromEnum VMSTAT_PGSCAN_KSWAPD_MOVABLE = 62
  fromEnum VMSTAT_PGSCAN_DIRECT_DMA = 63
  fromEnum VMSTAT_PGSCAN_DIRECT_NORMAL = 64
  fromEnum VMSTAT_PGSCAN_DIRECT_MOVABLE = 65
  fromEnum VMSTAT_PGSCAN_DIRECT_THROTTLE = 66
  fromEnum VMSTAT_PGINODESTEAL = 67
  fromEnum VMSTAT_SLABS_SCANNED = 68
  fromEnum VMSTAT_KSWAPD_INODESTEAL = 69
  fromEnum VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY = 70
  fromEnum VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY = 71
  fromEnum VMSTAT_PAGEOUTRUN = 72
  fromEnum VMSTAT_ALLOCSTALL = 73
  fromEnum VMSTAT_PGROTATED = 74
  fromEnum VMSTAT_DROP_PAGECACHE = 75
  fromEnum VMSTAT_DROP_SLAB = 76
  fromEnum VMSTAT_PGMIGRATE_SUCCESS = 77
  fromEnum VMSTAT_PGMIGRATE_FAIL = 78
  fromEnum VMSTAT_COMPACT_MIGRATE_SCANNED = 79
  fromEnum VMSTAT_COMPACT_FREE_SCANNED = 80
  fromEnum VMSTAT_COMPACT_ISOLATED = 81
  fromEnum VMSTAT_COMPACT_STALL = 82
  fromEnum VMSTAT_COMPACT_FAIL = 83
  fromEnum VMSTAT_COMPACT_SUCCESS = 84
  fromEnum VMSTAT_COMPACT_DAEMON_WAKE = 85
  fromEnum VMSTAT_UNEVICTABLE_PGS_CULLED = 86
  fromEnum VMSTAT_UNEVICTABLE_PGS_SCANNED = 87
  fromEnum VMSTAT_UNEVICTABLE_PGS_RESCUED = 88
  fromEnum VMSTAT_UNEVICTABLE_PGS_MLOCKED = 89
  fromEnum VMSTAT_UNEVICTABLE_PGS_MUNLOCKED = 90
  fromEnum VMSTAT_UNEVICTABLE_PGS_CLEARED = 91
  fromEnum VMSTAT_UNEVICTABLE_PGS_STRANDED = 92
  fromEnum VMSTAT_NR_ZSPAGES = 93
  fromEnum VMSTAT_NR_ION_HEAP = 94
  fromEnum VMSTAT_NR_GPU_HEAP = 95
  fromEnum VMSTAT_ALLOCSTALL_DMA = 96
  fromEnum VMSTAT_ALLOCSTALL_MOVABLE = 97
  fromEnum VMSTAT_ALLOCSTALL_NORMAL = 98
  fromEnum VMSTAT_COMPACT_DAEMON_FREE_SCANNED = 99
  fromEnum VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED = 100
  fromEnum VMSTAT_NR_FASTRPC = 101
  fromEnum VMSTAT_NR_INDIRECTLY_RECLAIMABLE = 102
  fromEnum VMSTAT_NR_ION_HEAP_POOL = 103
  fromEnum VMSTAT_NR_KERNEL_MISC_RECLAIMABLE = 104
  fromEnum VMSTAT_NR_SHADOW_CALL_STACK_BYTES = 105
  fromEnum VMSTAT_NR_SHMEM_HUGEPAGES = 106
  fromEnum VMSTAT_NR_SHMEM_PMDMAPPED = 107
  fromEnum VMSTAT_NR_UNRECLAIMABLE_PAGES = 108
  fromEnum VMSTAT_NR_ZONE_ACTIVE_ANON = 109
  fromEnum VMSTAT_NR_ZONE_ACTIVE_FILE = 110
  fromEnum VMSTAT_NR_ZONE_INACTIVE_ANON = 111
  fromEnum VMSTAT_NR_ZONE_INACTIVE_FILE = 112
  fromEnum VMSTAT_NR_ZONE_UNEVICTABLE = 113
  fromEnum VMSTAT_NR_ZONE_WRITE_PENDING = 114
  fromEnum VMSTAT_OOM_KILL = 115
  fromEnum VMSTAT_PGLAZYFREE = 116
  fromEnum VMSTAT_PGLAZYFREED = 117
  fromEnum VMSTAT_PGREFILL = 118
  fromEnum VMSTAT_PGSCAN_DIRECT = 119
  fromEnum VMSTAT_PGSCAN_KSWAPD = 120
  fromEnum VMSTAT_PGSKIP_DMA = 121
  fromEnum VMSTAT_PGSKIP_MOVABLE = 122
  fromEnum VMSTAT_PGSKIP_NORMAL = 123
  fromEnum VMSTAT_PGSTEAL_DIRECT = 124
  fromEnum VMSTAT_PGSTEAL_KSWAPD = 125
  fromEnum VMSTAT_SWAP_RA = 126
  fromEnum VMSTAT_SWAP_RA_HIT = 127
  fromEnum VMSTAT_WORKINGSET_RESTORE = 128
  succ VMSTAT_WORKINGSET_RESTORE
    = Prelude.error
        "VmstatCounters.succ: bad argument VMSTAT_WORKINGSET_RESTORE. This value would be out of bounds."
  succ VMSTAT_UNSPECIFIED = VMSTAT_NR_FREE_PAGES
  succ VMSTAT_NR_FREE_PAGES = VMSTAT_NR_ALLOC_BATCH
  succ VMSTAT_NR_ALLOC_BATCH = VMSTAT_NR_INACTIVE_ANON
  succ VMSTAT_NR_INACTIVE_ANON = VMSTAT_NR_ACTIVE_ANON
  succ VMSTAT_NR_ACTIVE_ANON = VMSTAT_NR_INACTIVE_FILE
  succ VMSTAT_NR_INACTIVE_FILE = VMSTAT_NR_ACTIVE_FILE
  succ VMSTAT_NR_ACTIVE_FILE = VMSTAT_NR_UNEVICTABLE
  succ VMSTAT_NR_UNEVICTABLE = VMSTAT_NR_MLOCK
  succ VMSTAT_NR_MLOCK = VMSTAT_NR_ANON_PAGES
  succ VMSTAT_NR_ANON_PAGES = VMSTAT_NR_MAPPED
  succ VMSTAT_NR_MAPPED = VMSTAT_NR_FILE_PAGES
  succ VMSTAT_NR_FILE_PAGES = VMSTAT_NR_DIRTY
  succ VMSTAT_NR_DIRTY = VMSTAT_NR_WRITEBACK
  succ VMSTAT_NR_WRITEBACK = VMSTAT_NR_SLAB_RECLAIMABLE
  succ VMSTAT_NR_SLAB_RECLAIMABLE = VMSTAT_NR_SLAB_UNRECLAIMABLE
  succ VMSTAT_NR_SLAB_UNRECLAIMABLE = VMSTAT_NR_PAGE_TABLE_PAGES
  succ VMSTAT_NR_PAGE_TABLE_PAGES = VMSTAT_NR_KERNEL_STACK
  succ VMSTAT_NR_KERNEL_STACK = VMSTAT_NR_OVERHEAD
  succ VMSTAT_NR_OVERHEAD = VMSTAT_NR_UNSTABLE
  succ VMSTAT_NR_UNSTABLE = VMSTAT_NR_BOUNCE
  succ VMSTAT_NR_BOUNCE = VMSTAT_NR_VMSCAN_WRITE
  succ VMSTAT_NR_VMSCAN_WRITE = VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM
  succ VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM = VMSTAT_NR_WRITEBACK_TEMP
  succ VMSTAT_NR_WRITEBACK_TEMP = VMSTAT_NR_ISOLATED_ANON
  succ VMSTAT_NR_ISOLATED_ANON = VMSTAT_NR_ISOLATED_FILE
  succ VMSTAT_NR_ISOLATED_FILE = VMSTAT_NR_SHMEM
  succ VMSTAT_NR_SHMEM = VMSTAT_NR_DIRTIED
  succ VMSTAT_NR_DIRTIED = VMSTAT_NR_WRITTEN
  succ VMSTAT_NR_WRITTEN = VMSTAT_NR_PAGES_SCANNED
  succ VMSTAT_NR_PAGES_SCANNED = VMSTAT_WORKINGSET_REFAULT
  succ VMSTAT_WORKINGSET_REFAULT = VMSTAT_WORKINGSET_ACTIVATE
  succ VMSTAT_WORKINGSET_ACTIVATE = VMSTAT_WORKINGSET_NODERECLAIM
  succ VMSTAT_WORKINGSET_NODERECLAIM
    = VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES
  succ VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES = VMSTAT_NR_FREE_CMA
  succ VMSTAT_NR_FREE_CMA = VMSTAT_NR_SWAPCACHE
  succ VMSTAT_NR_SWAPCACHE = VMSTAT_NR_DIRTY_THRESHOLD
  succ VMSTAT_NR_DIRTY_THRESHOLD
    = VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD
  succ VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD = VMSTAT_PGPGIN
  succ VMSTAT_PGPGIN = VMSTAT_PGPGOUT
  succ VMSTAT_PGPGOUT = VMSTAT_PGPGOUTCLEAN
  succ VMSTAT_PGPGOUTCLEAN = VMSTAT_PSWPIN
  succ VMSTAT_PSWPIN = VMSTAT_PSWPOUT
  succ VMSTAT_PSWPOUT = VMSTAT_PGALLOC_DMA
  succ VMSTAT_PGALLOC_DMA = VMSTAT_PGALLOC_NORMAL
  succ VMSTAT_PGALLOC_NORMAL = VMSTAT_PGALLOC_MOVABLE
  succ VMSTAT_PGALLOC_MOVABLE = VMSTAT_PGFREE
  succ VMSTAT_PGFREE = VMSTAT_PGACTIVATE
  succ VMSTAT_PGACTIVATE = VMSTAT_PGDEACTIVATE
  succ VMSTAT_PGDEACTIVATE = VMSTAT_PGFAULT
  succ VMSTAT_PGFAULT = VMSTAT_PGMAJFAULT
  succ VMSTAT_PGMAJFAULT = VMSTAT_PGREFILL_DMA
  succ VMSTAT_PGREFILL_DMA = VMSTAT_PGREFILL_NORMAL
  succ VMSTAT_PGREFILL_NORMAL = VMSTAT_PGREFILL_MOVABLE
  succ VMSTAT_PGREFILL_MOVABLE = VMSTAT_PGSTEAL_KSWAPD_DMA
  succ VMSTAT_PGSTEAL_KSWAPD_DMA = VMSTAT_PGSTEAL_KSWAPD_NORMAL
  succ VMSTAT_PGSTEAL_KSWAPD_NORMAL = VMSTAT_PGSTEAL_KSWAPD_MOVABLE
  succ VMSTAT_PGSTEAL_KSWAPD_MOVABLE = VMSTAT_PGSTEAL_DIRECT_DMA
  succ VMSTAT_PGSTEAL_DIRECT_DMA = VMSTAT_PGSTEAL_DIRECT_NORMAL
  succ VMSTAT_PGSTEAL_DIRECT_NORMAL = VMSTAT_PGSTEAL_DIRECT_MOVABLE
  succ VMSTAT_PGSTEAL_DIRECT_MOVABLE = VMSTAT_PGSCAN_KSWAPD_DMA
  succ VMSTAT_PGSCAN_KSWAPD_DMA = VMSTAT_PGSCAN_KSWAPD_NORMAL
  succ VMSTAT_PGSCAN_KSWAPD_NORMAL = VMSTAT_PGSCAN_KSWAPD_MOVABLE
  succ VMSTAT_PGSCAN_KSWAPD_MOVABLE = VMSTAT_PGSCAN_DIRECT_DMA
  succ VMSTAT_PGSCAN_DIRECT_DMA = VMSTAT_PGSCAN_DIRECT_NORMAL
  succ VMSTAT_PGSCAN_DIRECT_NORMAL = VMSTAT_PGSCAN_DIRECT_MOVABLE
  succ VMSTAT_PGSCAN_DIRECT_MOVABLE = VMSTAT_PGSCAN_DIRECT_THROTTLE
  succ VMSTAT_PGSCAN_DIRECT_THROTTLE = VMSTAT_PGINODESTEAL
  succ VMSTAT_PGINODESTEAL = VMSTAT_SLABS_SCANNED
  succ VMSTAT_SLABS_SCANNED = VMSTAT_KSWAPD_INODESTEAL
  succ VMSTAT_KSWAPD_INODESTEAL = VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY
  succ VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY
    = VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY
  succ VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY = VMSTAT_PAGEOUTRUN
  succ VMSTAT_PAGEOUTRUN = VMSTAT_ALLOCSTALL
  succ VMSTAT_ALLOCSTALL = VMSTAT_PGROTATED
  succ VMSTAT_PGROTATED = VMSTAT_DROP_PAGECACHE
  succ VMSTAT_DROP_PAGECACHE = VMSTAT_DROP_SLAB
  succ VMSTAT_DROP_SLAB = VMSTAT_PGMIGRATE_SUCCESS
  succ VMSTAT_PGMIGRATE_SUCCESS = VMSTAT_PGMIGRATE_FAIL
  succ VMSTAT_PGMIGRATE_FAIL = VMSTAT_COMPACT_MIGRATE_SCANNED
  succ VMSTAT_COMPACT_MIGRATE_SCANNED = VMSTAT_COMPACT_FREE_SCANNED
  succ VMSTAT_COMPACT_FREE_SCANNED = VMSTAT_COMPACT_ISOLATED
  succ VMSTAT_COMPACT_ISOLATED = VMSTAT_COMPACT_STALL
  succ VMSTAT_COMPACT_STALL = VMSTAT_COMPACT_FAIL
  succ VMSTAT_COMPACT_FAIL = VMSTAT_COMPACT_SUCCESS
  succ VMSTAT_COMPACT_SUCCESS = VMSTAT_COMPACT_DAEMON_WAKE
  succ VMSTAT_COMPACT_DAEMON_WAKE = VMSTAT_UNEVICTABLE_PGS_CULLED
  succ VMSTAT_UNEVICTABLE_PGS_CULLED = VMSTAT_UNEVICTABLE_PGS_SCANNED
  succ VMSTAT_UNEVICTABLE_PGS_SCANNED
    = VMSTAT_UNEVICTABLE_PGS_RESCUED
  succ VMSTAT_UNEVICTABLE_PGS_RESCUED
    = VMSTAT_UNEVICTABLE_PGS_MLOCKED
  succ VMSTAT_UNEVICTABLE_PGS_MLOCKED
    = VMSTAT_UNEVICTABLE_PGS_MUNLOCKED
  succ VMSTAT_UNEVICTABLE_PGS_MUNLOCKED
    = VMSTAT_UNEVICTABLE_PGS_CLEARED
  succ VMSTAT_UNEVICTABLE_PGS_CLEARED
    = VMSTAT_UNEVICTABLE_PGS_STRANDED
  succ VMSTAT_UNEVICTABLE_PGS_STRANDED = VMSTAT_NR_ZSPAGES
  succ VMSTAT_NR_ZSPAGES = VMSTAT_NR_ION_HEAP
  succ VMSTAT_NR_ION_HEAP = VMSTAT_NR_GPU_HEAP
  succ VMSTAT_NR_GPU_HEAP = VMSTAT_ALLOCSTALL_DMA
  succ VMSTAT_ALLOCSTALL_DMA = VMSTAT_ALLOCSTALL_MOVABLE
  succ VMSTAT_ALLOCSTALL_MOVABLE = VMSTAT_ALLOCSTALL_NORMAL
  succ VMSTAT_ALLOCSTALL_NORMAL = VMSTAT_COMPACT_DAEMON_FREE_SCANNED
  succ VMSTAT_COMPACT_DAEMON_FREE_SCANNED
    = VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED
  succ VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED = VMSTAT_NR_FASTRPC
  succ VMSTAT_NR_FASTRPC = VMSTAT_NR_INDIRECTLY_RECLAIMABLE
  succ VMSTAT_NR_INDIRECTLY_RECLAIMABLE = VMSTAT_NR_ION_HEAP_POOL
  succ VMSTAT_NR_ION_HEAP_POOL = VMSTAT_NR_KERNEL_MISC_RECLAIMABLE
  succ VMSTAT_NR_KERNEL_MISC_RECLAIMABLE
    = VMSTAT_NR_SHADOW_CALL_STACK_BYTES
  succ VMSTAT_NR_SHADOW_CALL_STACK_BYTES = VMSTAT_NR_SHMEM_HUGEPAGES
  succ VMSTAT_NR_SHMEM_HUGEPAGES = VMSTAT_NR_SHMEM_PMDMAPPED
  succ VMSTAT_NR_SHMEM_PMDMAPPED = VMSTAT_NR_UNRECLAIMABLE_PAGES
  succ VMSTAT_NR_UNRECLAIMABLE_PAGES = VMSTAT_NR_ZONE_ACTIVE_ANON
  succ VMSTAT_NR_ZONE_ACTIVE_ANON = VMSTAT_NR_ZONE_ACTIVE_FILE
  succ VMSTAT_NR_ZONE_ACTIVE_FILE = VMSTAT_NR_ZONE_INACTIVE_ANON
  succ VMSTAT_NR_ZONE_INACTIVE_ANON = VMSTAT_NR_ZONE_INACTIVE_FILE
  succ VMSTAT_NR_ZONE_INACTIVE_FILE = VMSTAT_NR_ZONE_UNEVICTABLE
  succ VMSTAT_NR_ZONE_UNEVICTABLE = VMSTAT_NR_ZONE_WRITE_PENDING
  succ VMSTAT_NR_ZONE_WRITE_PENDING = VMSTAT_OOM_KILL
  succ VMSTAT_OOM_KILL = VMSTAT_PGLAZYFREE
  succ VMSTAT_PGLAZYFREE = VMSTAT_PGLAZYFREED
  succ VMSTAT_PGLAZYFREED = VMSTAT_PGREFILL
  succ VMSTAT_PGREFILL = VMSTAT_PGSCAN_DIRECT
  succ VMSTAT_PGSCAN_DIRECT = VMSTAT_PGSCAN_KSWAPD
  succ VMSTAT_PGSCAN_KSWAPD = VMSTAT_PGSKIP_DMA
  succ VMSTAT_PGSKIP_DMA = VMSTAT_PGSKIP_MOVABLE
  succ VMSTAT_PGSKIP_MOVABLE = VMSTAT_PGSKIP_NORMAL
  succ VMSTAT_PGSKIP_NORMAL = VMSTAT_PGSTEAL_DIRECT
  succ VMSTAT_PGSTEAL_DIRECT = VMSTAT_PGSTEAL_KSWAPD
  succ VMSTAT_PGSTEAL_KSWAPD = VMSTAT_SWAP_RA
  succ VMSTAT_SWAP_RA = VMSTAT_SWAP_RA_HIT
  succ VMSTAT_SWAP_RA_HIT = VMSTAT_WORKINGSET_RESTORE
  pred VMSTAT_UNSPECIFIED
    = Prelude.error
        "VmstatCounters.pred: bad argument VMSTAT_UNSPECIFIED. This value would be out of bounds."
  pred VMSTAT_NR_FREE_PAGES = VMSTAT_UNSPECIFIED
  pred VMSTAT_NR_ALLOC_BATCH = VMSTAT_NR_FREE_PAGES
  pred VMSTAT_NR_INACTIVE_ANON = VMSTAT_NR_ALLOC_BATCH
  pred VMSTAT_NR_ACTIVE_ANON = VMSTAT_NR_INACTIVE_ANON
  pred VMSTAT_NR_INACTIVE_FILE = VMSTAT_NR_ACTIVE_ANON
  pred VMSTAT_NR_ACTIVE_FILE = VMSTAT_NR_INACTIVE_FILE
  pred VMSTAT_NR_UNEVICTABLE = VMSTAT_NR_ACTIVE_FILE
  pred VMSTAT_NR_MLOCK = VMSTAT_NR_UNEVICTABLE
  pred VMSTAT_NR_ANON_PAGES = VMSTAT_NR_MLOCK
  pred VMSTAT_NR_MAPPED = VMSTAT_NR_ANON_PAGES
  pred VMSTAT_NR_FILE_PAGES = VMSTAT_NR_MAPPED
  pred VMSTAT_NR_DIRTY = VMSTAT_NR_FILE_PAGES
  pred VMSTAT_NR_WRITEBACK = VMSTAT_NR_DIRTY
  pred VMSTAT_NR_SLAB_RECLAIMABLE = VMSTAT_NR_WRITEBACK
  pred VMSTAT_NR_SLAB_UNRECLAIMABLE = VMSTAT_NR_SLAB_RECLAIMABLE
  pred VMSTAT_NR_PAGE_TABLE_PAGES = VMSTAT_NR_SLAB_UNRECLAIMABLE
  pred VMSTAT_NR_KERNEL_STACK = VMSTAT_NR_PAGE_TABLE_PAGES
  pred VMSTAT_NR_OVERHEAD = VMSTAT_NR_KERNEL_STACK
  pred VMSTAT_NR_UNSTABLE = VMSTAT_NR_OVERHEAD
  pred VMSTAT_NR_BOUNCE = VMSTAT_NR_UNSTABLE
  pred VMSTAT_NR_VMSCAN_WRITE = VMSTAT_NR_BOUNCE
  pred VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM = VMSTAT_NR_VMSCAN_WRITE
  pred VMSTAT_NR_WRITEBACK_TEMP = VMSTAT_NR_VMSCAN_IMMEDIATE_RECLAIM
  pred VMSTAT_NR_ISOLATED_ANON = VMSTAT_NR_WRITEBACK_TEMP
  pred VMSTAT_NR_ISOLATED_FILE = VMSTAT_NR_ISOLATED_ANON
  pred VMSTAT_NR_SHMEM = VMSTAT_NR_ISOLATED_FILE
  pred VMSTAT_NR_DIRTIED = VMSTAT_NR_SHMEM
  pred VMSTAT_NR_WRITTEN = VMSTAT_NR_DIRTIED
  pred VMSTAT_NR_PAGES_SCANNED = VMSTAT_NR_WRITTEN
  pred VMSTAT_WORKINGSET_REFAULT = VMSTAT_NR_PAGES_SCANNED
  pred VMSTAT_WORKINGSET_ACTIVATE = VMSTAT_WORKINGSET_REFAULT
  pred VMSTAT_WORKINGSET_NODERECLAIM = VMSTAT_WORKINGSET_ACTIVATE
  pred VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES
    = VMSTAT_WORKINGSET_NODERECLAIM
  pred VMSTAT_NR_FREE_CMA = VMSTAT_NR_ANON_TRANSPARENT_HUGEPAGES
  pred VMSTAT_NR_SWAPCACHE = VMSTAT_NR_FREE_CMA
  pred VMSTAT_NR_DIRTY_THRESHOLD = VMSTAT_NR_SWAPCACHE
  pred VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD
    = VMSTAT_NR_DIRTY_THRESHOLD
  pred VMSTAT_PGPGIN = VMSTAT_NR_DIRTY_BACKGROUND_THRESHOLD
  pred VMSTAT_PGPGOUT = VMSTAT_PGPGIN
  pred VMSTAT_PGPGOUTCLEAN = VMSTAT_PGPGOUT
  pred VMSTAT_PSWPIN = VMSTAT_PGPGOUTCLEAN
  pred VMSTAT_PSWPOUT = VMSTAT_PSWPIN
  pred VMSTAT_PGALLOC_DMA = VMSTAT_PSWPOUT
  pred VMSTAT_PGALLOC_NORMAL = VMSTAT_PGALLOC_DMA
  pred VMSTAT_PGALLOC_MOVABLE = VMSTAT_PGALLOC_NORMAL
  pred VMSTAT_PGFREE = VMSTAT_PGALLOC_MOVABLE
  pred VMSTAT_PGACTIVATE = VMSTAT_PGFREE
  pred VMSTAT_PGDEACTIVATE = VMSTAT_PGACTIVATE
  pred VMSTAT_PGFAULT = VMSTAT_PGDEACTIVATE
  pred VMSTAT_PGMAJFAULT = VMSTAT_PGFAULT
  pred VMSTAT_PGREFILL_DMA = VMSTAT_PGMAJFAULT
  pred VMSTAT_PGREFILL_NORMAL = VMSTAT_PGREFILL_DMA
  pred VMSTAT_PGREFILL_MOVABLE = VMSTAT_PGREFILL_NORMAL
  pred VMSTAT_PGSTEAL_KSWAPD_DMA = VMSTAT_PGREFILL_MOVABLE
  pred VMSTAT_PGSTEAL_KSWAPD_NORMAL = VMSTAT_PGSTEAL_KSWAPD_DMA
  pred VMSTAT_PGSTEAL_KSWAPD_MOVABLE = VMSTAT_PGSTEAL_KSWAPD_NORMAL
  pred VMSTAT_PGSTEAL_DIRECT_DMA = VMSTAT_PGSTEAL_KSWAPD_MOVABLE
  pred VMSTAT_PGSTEAL_DIRECT_NORMAL = VMSTAT_PGSTEAL_DIRECT_DMA
  pred VMSTAT_PGSTEAL_DIRECT_MOVABLE = VMSTAT_PGSTEAL_DIRECT_NORMAL
  pred VMSTAT_PGSCAN_KSWAPD_DMA = VMSTAT_PGSTEAL_DIRECT_MOVABLE
  pred VMSTAT_PGSCAN_KSWAPD_NORMAL = VMSTAT_PGSCAN_KSWAPD_DMA
  pred VMSTAT_PGSCAN_KSWAPD_MOVABLE = VMSTAT_PGSCAN_KSWAPD_NORMAL
  pred VMSTAT_PGSCAN_DIRECT_DMA = VMSTAT_PGSCAN_KSWAPD_MOVABLE
  pred VMSTAT_PGSCAN_DIRECT_NORMAL = VMSTAT_PGSCAN_DIRECT_DMA
  pred VMSTAT_PGSCAN_DIRECT_MOVABLE = VMSTAT_PGSCAN_DIRECT_NORMAL
  pred VMSTAT_PGSCAN_DIRECT_THROTTLE = VMSTAT_PGSCAN_DIRECT_MOVABLE
  pred VMSTAT_PGINODESTEAL = VMSTAT_PGSCAN_DIRECT_THROTTLE
  pred VMSTAT_SLABS_SCANNED = VMSTAT_PGINODESTEAL
  pred VMSTAT_KSWAPD_INODESTEAL = VMSTAT_SLABS_SCANNED
  pred VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY = VMSTAT_KSWAPD_INODESTEAL
  pred VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY
    = VMSTAT_KSWAPD_LOW_WMARK_HIT_QUICKLY
  pred VMSTAT_PAGEOUTRUN = VMSTAT_KSWAPD_HIGH_WMARK_HIT_QUICKLY
  pred VMSTAT_ALLOCSTALL = VMSTAT_PAGEOUTRUN
  pred VMSTAT_PGROTATED = VMSTAT_ALLOCSTALL
  pred VMSTAT_DROP_PAGECACHE = VMSTAT_PGROTATED
  pred VMSTAT_DROP_SLAB = VMSTAT_DROP_PAGECACHE
  pred VMSTAT_PGMIGRATE_SUCCESS = VMSTAT_DROP_SLAB
  pred VMSTAT_PGMIGRATE_FAIL = VMSTAT_PGMIGRATE_SUCCESS
  pred VMSTAT_COMPACT_MIGRATE_SCANNED = VMSTAT_PGMIGRATE_FAIL
  pred VMSTAT_COMPACT_FREE_SCANNED = VMSTAT_COMPACT_MIGRATE_SCANNED
  pred VMSTAT_COMPACT_ISOLATED = VMSTAT_COMPACT_FREE_SCANNED
  pred VMSTAT_COMPACT_STALL = VMSTAT_COMPACT_ISOLATED
  pred VMSTAT_COMPACT_FAIL = VMSTAT_COMPACT_STALL
  pred VMSTAT_COMPACT_SUCCESS = VMSTAT_COMPACT_FAIL
  pred VMSTAT_COMPACT_DAEMON_WAKE = VMSTAT_COMPACT_SUCCESS
  pred VMSTAT_UNEVICTABLE_PGS_CULLED = VMSTAT_COMPACT_DAEMON_WAKE
  pred VMSTAT_UNEVICTABLE_PGS_SCANNED = VMSTAT_UNEVICTABLE_PGS_CULLED
  pred VMSTAT_UNEVICTABLE_PGS_RESCUED
    = VMSTAT_UNEVICTABLE_PGS_SCANNED
  pred VMSTAT_UNEVICTABLE_PGS_MLOCKED
    = VMSTAT_UNEVICTABLE_PGS_RESCUED
  pred VMSTAT_UNEVICTABLE_PGS_MUNLOCKED
    = VMSTAT_UNEVICTABLE_PGS_MLOCKED
  pred VMSTAT_UNEVICTABLE_PGS_CLEARED
    = VMSTAT_UNEVICTABLE_PGS_MUNLOCKED
  pred VMSTAT_UNEVICTABLE_PGS_STRANDED
    = VMSTAT_UNEVICTABLE_PGS_CLEARED
  pred VMSTAT_NR_ZSPAGES = VMSTAT_UNEVICTABLE_PGS_STRANDED
  pred VMSTAT_NR_ION_HEAP = VMSTAT_NR_ZSPAGES
  pred VMSTAT_NR_GPU_HEAP = VMSTAT_NR_ION_HEAP
  pred VMSTAT_ALLOCSTALL_DMA = VMSTAT_NR_GPU_HEAP
  pred VMSTAT_ALLOCSTALL_MOVABLE = VMSTAT_ALLOCSTALL_DMA
  pred VMSTAT_ALLOCSTALL_NORMAL = VMSTAT_ALLOCSTALL_MOVABLE
  pred VMSTAT_COMPACT_DAEMON_FREE_SCANNED = VMSTAT_ALLOCSTALL_NORMAL
  pred VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED
    = VMSTAT_COMPACT_DAEMON_FREE_SCANNED
  pred VMSTAT_NR_FASTRPC = VMSTAT_COMPACT_DAEMON_MIGRATE_SCANNED
  pred VMSTAT_NR_INDIRECTLY_RECLAIMABLE = VMSTAT_NR_FASTRPC
  pred VMSTAT_NR_ION_HEAP_POOL = VMSTAT_NR_INDIRECTLY_RECLAIMABLE
  pred VMSTAT_NR_KERNEL_MISC_RECLAIMABLE = VMSTAT_NR_ION_HEAP_POOL
  pred VMSTAT_NR_SHADOW_CALL_STACK_BYTES
    = VMSTAT_NR_KERNEL_MISC_RECLAIMABLE
  pred VMSTAT_NR_SHMEM_HUGEPAGES = VMSTAT_NR_SHADOW_CALL_STACK_BYTES
  pred VMSTAT_NR_SHMEM_PMDMAPPED = VMSTAT_NR_SHMEM_HUGEPAGES
  pred VMSTAT_NR_UNRECLAIMABLE_PAGES = VMSTAT_NR_SHMEM_PMDMAPPED
  pred VMSTAT_NR_ZONE_ACTIVE_ANON = VMSTAT_NR_UNRECLAIMABLE_PAGES
  pred VMSTAT_NR_ZONE_ACTIVE_FILE = VMSTAT_NR_ZONE_ACTIVE_ANON
  pred VMSTAT_NR_ZONE_INACTIVE_ANON = VMSTAT_NR_ZONE_ACTIVE_FILE
  pred VMSTAT_NR_ZONE_INACTIVE_FILE = VMSTAT_NR_ZONE_INACTIVE_ANON
  pred VMSTAT_NR_ZONE_UNEVICTABLE = VMSTAT_NR_ZONE_INACTIVE_FILE
  pred VMSTAT_NR_ZONE_WRITE_PENDING = VMSTAT_NR_ZONE_UNEVICTABLE
  pred VMSTAT_OOM_KILL = VMSTAT_NR_ZONE_WRITE_PENDING
  pred VMSTAT_PGLAZYFREE = VMSTAT_OOM_KILL
  pred VMSTAT_PGLAZYFREED = VMSTAT_PGLAZYFREE
  pred VMSTAT_PGREFILL = VMSTAT_PGLAZYFREED
  pred VMSTAT_PGSCAN_DIRECT = VMSTAT_PGREFILL
  pred VMSTAT_PGSCAN_KSWAPD = VMSTAT_PGSCAN_DIRECT
  pred VMSTAT_PGSKIP_DMA = VMSTAT_PGSCAN_KSWAPD
  pred VMSTAT_PGSKIP_MOVABLE = VMSTAT_PGSKIP_DMA
  pred VMSTAT_PGSKIP_NORMAL = VMSTAT_PGSKIP_MOVABLE
  pred VMSTAT_PGSTEAL_DIRECT = VMSTAT_PGSKIP_NORMAL
  pred VMSTAT_PGSTEAL_KSWAPD = VMSTAT_PGSTEAL_DIRECT
  pred VMSTAT_SWAP_RA = VMSTAT_PGSTEAL_KSWAPD
  pred VMSTAT_SWAP_RA_HIT = VMSTAT_SWAP_RA
  pred VMSTAT_WORKINGSET_RESTORE = VMSTAT_SWAP_RA_HIT
  enumFrom = Data.ProtoLens.Message.Enum.messageEnumFrom
  enumFromTo = Data.ProtoLens.Message.Enum.messageEnumFromTo
  enumFromThen = Data.ProtoLens.Message.Enum.messageEnumFromThen
  enumFromThenTo = Data.ProtoLens.Message.Enum.messageEnumFromThenTo
instance Data.ProtoLens.FieldDefault VmstatCounters where
  fieldDefault = VMSTAT_UNSPECIFIED
instance Control.DeepSeq.NFData VmstatCounters where
  rnf x__ = Prelude.seq x__ ()