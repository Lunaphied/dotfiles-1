--- CMakeLists.txt
+++ CMakeLists.txt
@@ -99,6 +99,12 @@ if(COMMAND CMAKE_POLICY)
   CMAKE_POLICY(SET CMP0003 NEW)
   CMAKE_POLICY(SET CMP0007 OLD)
   CMAKE_POLICY(SET CMP0017 OLD)
+  CMAKE_POLICY(SET CMP0021 OLD)
+  CMAKE_POLICY(SET CMP0026 OLD)
+  CMAKE_POLICY(SET CMP0042 OLD)
+  CMAKE_POLICY(SET CMP0046 NEW)
+  CMAKE_POLICY(SET CMP0053 OLD)
+  CMAKE_POLICY(SET CMP0054 NEW)
 endif(COMMAND CMAKE_POLICY)
 
 # set CMake project name
@@ -2079,16 +2085,10 @@ if(NOT BRLCAD_IS_SUBBUILD)
     list(REMOVE_DUPLICATES CMAKE_EXTERNAL_TARGET_LIST)
   endif(CMAKE_EXTERNAL_TARGET_LIST)
   foreach(libtarget ${CMAKE_LIBRARY_TARGET_LIST})
-    #TODO - can this locate test be replaced with if(TARGET ${libtarget}) ?
-    if(NOT CMAKE_BUILD_TYPE)
-      get_target_property(target_location ${libtarget} LOCATION)
-    else(NOT CMAKE_BUILD_TYPE)
-      get_target_property(target_location ${libtarget} LOCATION_${CMAKE_BUILD_TYPE})
-    endif(NOT CMAKE_BUILD_TYPE)
-    if(target_location)
-      add_dependencies(${libtarget} timestamp)
-      add_dependencies(buildtimedelta ${libtarget})
-    endif(target_location)
+    if(TARGET ${libtarget})
+      #add_dependencies(${libtarget} timestamp)
+      #add_dependencies(buildtimedelta ${libtarget})
+    endif(TARGET ${libtarget})
   endforeach(libtarget ${CMAKE_LIBRARY_TARGET_LIST})
   foreach(exectarget ${CMAKE_EXEC_TARGET_LIST})
     if(NOT CMAKE_BUILD_TYPE)
--- misc/CMake/BRLCAD_CMakeFiles.cmake
+++ misc/CMake/BRLCAD_CMakeFiles.cmake
@@ -65,7 +65,7 @@ macro(CMAKEFILES)
       # make sure the file is there.  Normally attempting to ignore
       # a non-existent file is a fatal error, but these keywords
       # don't necessarily refer to files.
-      set(TARGET_FLAGS SHARED STATIC OBJECT WIN32 UNKNOWN IMPORTED)
+      set(TARGET_FLAGS SHARED STATIC OBJECT WIN32 UNKNOWN IMPORTED MODULE INTERFACE)
       foreach(TARGET_FLAG ${TARGET_FLAGS})
 	if("${TARGET_FLAG}" STREQUAL "${ITEM}")
 	  if(NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${ITEM})
--- misc/CMake/BRLCAD_Summary.cmake
+++ misc/CMake/BRLCAD_Summary.cmake
@@ -155,16 +155,20 @@ function(print_flags flag_type flags FLAGS_MAXLINE)
       set(LINE_STR "${LINE_STR}   ")
     endif(${LINE_LENGTH} STREQUAL "0")
     list(GET ${flag_type}_LIST 0 NEXT_FLAG)
-    string(LENGTH ${NEXT_FLAG} FLAG_LENGTH)
-    math(EXPR NEW_LINE_LENGTH "${LINE_LENGTH} + ${FLAG_LENGTH} + 1")
-    if(${NEW_LINE_LENGTH} LESS ${FLAGS_MAXLINE})
-      set(LINE_STR "${LINE_STR} ${NEXT_FLAG}")
+    if(NOT "${NEXT_FLAG}" STREQUAL "")
+      string(LENGTH ${NEXT_FLAG} FLAG_LENGTH)
+      math(EXPR NEW_LINE_LENGTH "${LINE_LENGTH} + ${FLAG_LENGTH} + 1")
+      if(${NEW_LINE_LENGTH} LESS ${FLAGS_MAXLINE})
+	set(LINE_STR "${LINE_STR} ${NEXT_FLAG}")
+	list(REMOVE_AT ${flag_type}_LIST 0)
+	list(LENGTH ${flag_type}_LIST FLAG_CNT)
+      else(${NEW_LINE_LENGTH} LESS ${FLAGS_MAXLINE})
+	message("${LINE_STR}")
+	set(LINE_STR "")
+      endif(${NEW_LINE_LENGTH} LESS ${FLAGS_MAXLINE})
+    else(NOT "${NEXT_FLAG}" STREQUAL "")
       list(REMOVE_AT ${flag_type}_LIST 0)
-      list(LENGTH ${flag_type}_LIST FLAG_CNT)
-    else(${NEW_LINE_LENGTH} LESS ${FLAGS_MAXLINE})
-      message("${LINE_STR}")
-      set(LINE_STR "")
-    endif(${NEW_LINE_LENGTH} LESS ${FLAGS_MAXLINE})
+    endif(NOT "${NEXT_FLAG}" STREQUAL "")
   endwhile(${FLAG_CNT} GREATER 0)
   if(NOT "${LINE_STR}" STREQUAL "")
     message("${LINE_STR}")
